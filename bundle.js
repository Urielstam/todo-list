(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap);"]),a.push([n.id,'/* || GLOBAL STYLES */\n:root,\n:root.light {\n    --accent-color: #03A696;\n    --aside-color: #e0ddd1;\n    --aside-hover-color: #dbd9cf;\n    --main-color: #ECE8DD;\n    --text-color: 0, 0, 0;\n    --todo-hover: 0, 0, 0;\n    --todo-btn-hover: #e0dcd1;\n    --priority-low: #36AE7C;\n    --priority-medium: #FF6E31;\n    --priority-high: #EB5353;\n\n}\n:root.dark {\n     --aside-color: #272727;\n    --aside-hover-color: #353535;\n    --main-color: #171717;\n    --text-color: 255, 255, 255;\n    --todo-hover: 153, 153, 153;\n    --todo-btn-hover: #252525;\n}\n\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\n\nbody {\n    color: rgb(var(--text-color), 0.8);\n    width: 100vw;\n    height: 100vh;\n    font-family: \'Open Sans\', sans-serif;\n    overflow: hidden; \n}\n\n\n/* FORM OVERLAY FORM */\n\n.overlay-create-new, .overlay-edit, .overlay-view-details {\n    z-index: 2;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 10px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    /* display: none; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    transition: opacity 0.3s 0s, visibility 0s 0.3s;\n  }\n  .is-visible {\n    opacity: 1;\n    visibility: visible;\n    /* display: flex; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0s;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n  }\n  \n  form.create-new, form.edit, .view-details-container {\n    \n    background-color: var(--aside-color);\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n    box-sizing: border-box;\n    width: clamp(350px, 50%, 600px);\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    border-radius: 15px;\n    padding: 1rem;\n\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px);\n    /* Force Hardware Acceleration in WebKit */\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -webkit-transition-property: -webkit-transform;\n    -moz-transition-property: -moz-transform;\n    transition-property: transform;\n    -webkit-transition-duration: 0.3s;\n    -moz-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n  }\n\n.create-new-main, .edit-main {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.create-new-main input, .edit-main input {\n    outline: none;\n    font-size: 0.8rem;\n    color: var(--text-color);\n    background-color: var(--aside-color);\n}\n\n.create-new-main input:nth-child(1), .edit-main input:nth-child(1) {\n    font-size: 1.2rem;\n    font-weight: 700;\n}\n\n.create-new-options, .edit-options {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n\n\n\n.priority {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    gap: 0.8rem;\n}\n\n.priority-radios {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    /* cursor: pointer; */\n}\n\ninput[type="radio"] {\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: #fff;\n    /* Not removed via appearance */\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 50%;\n    display: grid;\n    place-content: center;\n    cursor: pointer;\n}\n\ninput[type="radio"]::before {\ncontent: "";\nwidth: 0.65em;\nheight: 0.65em;\nborder-radius: 50%;\ntransform: scale(0);\ntransition: 120ms transform ease-in-out;\nbox-shadow: inset 1em 1em var(--accent-color);\n}\n\ninput[type="radio"]:checked::before {\ntransform: scale(1);\n}\n\n\n\n#priority-low, #priority-low-edit {\n    border: 0.15em solid var(--priority-low);\n}\n\n#priority-low::before, #priority-low-edit::before {\n    box-shadow: inset 1em 1em var(--priority-low);\n}\n\n#priority-medium, #priority-medium-edit {\n    border: 0.15em solid var(--priority-medium);\n}\n\n#priority-medium::before, #priority-medium-edit::before {\n    box-shadow: inset 1em 1em var(--priority-medium);\n}\n\n#priority-high, #priority-high-edit {\n    border: 0.15em solid var(--priority-high);\n}\n\n#priority-high::before, #priority-high-edit::before {\n    box-shadow: inset 1em 1em var(--priority-high);\n}\n\n.create-new-options-main,\n.create-new-actions,\n.edit-options-main,\n.edit-actions {\n    display: flex;\n    gap: 0.8rem;\n}\n\n.create-new-options-main, .edit-options-main {\n    align-self: flex-end;\n} \n\n.create-new-options button,  \n.create-new-actions button,\n.edit-options button,  \n.edit-actions button {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 0.8rem;\n    padding: 0.4rem 0.6rem;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n/* .due-date {\n    \n    gap: 5px;\n} */\n\n#new-due-date, #edit-due-date {\n    display: inline-flex;\n    align-items: flex-end;\n    font-size: 0.8rem;\n    outline: none;\n    background-color: transparent;\n    appearance: none;\n    text-transform: uppercase;\n    border: 1px solid var(--accent-color);\n    border-radius: 5px;\n    padding: 0.3rem 0.5rem;\n    user-select: none;\n}\n\ninput::-webkit-datetime-edit-day-field:focus,\ninput::-webkit-datetime-edit-month-field:focus,\ninput::-webkit-datetime-edit-year-field:focus {\n    background-color: var(--accent-color);\n    color: white;\n    outline: none;\n}\n\n.create-new-divider, .edit-divider {\n    width: 100%;\n    height: 1px;\n    background-color: #3b3b3b5b;\n}\n\n.create-new-actions, .edit-actions {\n    align-self: flex-end;\n    font-weight: 600;\n}\n\n.close-view-details {\n    position: absolute;\n    font-size: 1.2rem;\n    right: 14px;\n    top: 14px;\n    cursor: pointer;\n}\n\n.view-details-content {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.view-title, \n.view-desc, \n.view-priority, \n.view-due-date,\n.view-date-create {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n/* || CONTENTS */\n.contents {\n    height: 100%;\n    display: grid;\n    grid-template-columns: auto 3fr;\n    grid-template-rows: auto 1fr;\n    grid-template-areas: \n    "header header"\n    "nav main";\n}\n\na {\n    color: inherit;\n    text-decoration: none;\n    pointer-events: none;\n}\n\n/* || HEADER */\n.header {\n    grid-area: header;\n    color: white;\n    height: 50px;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 2rem;\n    background-color: var(--accent-color);\n}\n\n.header-nav {\n    display: flex;\n    gap: 0.625rem;\n}\n\n.header button {\n    color: white;\n    background: none;\n    height: 24px;\n    width: 24px;\n    border-radius: 5px;\n    font-size: 1.4rem;\n}\n\n.header button:hover {\n    background: hsla(0,0%,100%,.2);\n}\n\n.header-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.625rem;\n}\n\n\n/* || TOGGLE DARK/LIGHT THEME */\n.toggle-theme input[type="checkbox"] {\nvisibility: hidden;\ndisplay: none;\n}\n\n.toggle-theme *,\n.toggle-theme ::after,\n.toggle-theme ::before {\nbox-sizing: border-box;\n}\n\n/* The switch - the box around the slider */\n.toggle-theme .switch {\n--width-of-switch: 2.5em;\n--height-of-switch: 1.3em;\n/* size of sliding icon -- sun and moon */\n--size-of-icon: 1em;\n/* it is like a inline-padding of switch */\n--slider-offset: 0.3em;\nposition: relative;\nwidth: var(--width-of-switch);\nheight: var(--height-of-switch);\ndisplay: inline-block;\n}\n\n/* The slider */\n.toggle-theme .slider {\nposition: absolute;\ncursor: pointer;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\n/* background-color: #f4f4f5; */\nbackground-color: var(--aside-color);\ntransition: .4s;\nborder-radius: 30px;\n}\n\n.toggle-theme .slider:before {\nposition: absolute;\ncontent: "";\nheight: var(--size-of-icon,1.4em);\nwidth: var(--size-of-icon,1.4em);\nborder-radius: 20px;\nleft: var(--slider-offset,0.3em);\ntop: 50%;\ntransform: translateY(-50%);\n/* background: linear-gradient(40deg,#ff0080,#ff8c00 70%); */\nbackground-color: var(--accent-color);\ntransition: .4s;\n}\n\n.toggle-theme input:checked + .slider {\n/* background-color: #303136; */\nbackground: var(--aside-color);\n}\n\n.toggle-theme input:checked + .slider:before {\nleft: calc(100% - (var(--size-of-icon,1.4em) + var(--slider-offset,0.3em)));\n/* background: #303136; */\nbackground: var(--aside-color);\n/* change the value of second inset in box-shadow to change the angle and direction of the moon  */\n/* box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb; */\nbox-shadow: inset -3px -2px 5px -2px var(--accent-color), inset -10px -4px 0 0 var(--accent-color);\n\n}\n\n\n/* || ASIDE */\nnav {\n    width: 250px;\n    grid-area: nav;\n    overflow: auto;\n    overflow-x: hidden;\n    /* transition: all 1s; */\n    transition: all .5s cubic-bezier(0.4, 0, 0.2, 1);\n    background-color: var(--aside-color);\n}\n\n\n.sidebar-content-nav {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 4rem 1rem 1rem;\n}\n\n.side-nav {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 5px;\n    border-radius: 8px;\n    cursor: pointer;\n}\n\n.side-nav:hover, .project-item:hover, .project-title-container:hover {\n    background-color: var(--aside-hover-color);\n}\n\n.sidebar-content-projects {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 0 1rem 0 1rem;\n}\n\n.project-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.project-title-container .add-project {\n    cursor: pointer;\n    font-size: 1.4rem;\n}\n\n.project-title {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 1.2rem;\n    padding: 5px;\n    border-radius: 8px;\n}\n\n.project-item {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 5px 5px 5px 10px;\n    border-radius: 8px;\n}\n\n.dot {\n    height: 13px;\n    width: 13px;\n    background-color: #b6b6b6;\n    border-radius: 50%;\n    flex-shrink: 0;\n}\n\n/* || MAIN */\n.main-container {\n    grid-area: main;\n    max-height: 100%;\n    max-width: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--main-color);\n    padding-bottom: 4rem;\n}\n\n.main h1 {\n    font-weight: 700;\n}\n\n.main .add-todo {\n    width: clamp(300px, 50%, 750px);\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    border-radius: 15px;\n    padding-left: 5px;\n}\n\n.add-todo-btn, .add-project {\n    color: var(--text-color);\n    margin-top: 7px;\n    background: none;\n    font-size: 2rem;\n    border-radius: 8px;\n    cursor: pointer;\n    transform: translateZ(0) scale(1);\n    transition: transform .2s;\n}\n\n.add-todo-btn:not(:disabled):hover,\n.add-project:not(:disabled):hover,\n.close-view-details:not(:disabled):hover {\n    transform: scale(1.05);\n}\n\n.add-todo-btn:not(:disabled):hover:active,\n.add-project:not(:disabled):hover:active,\n.close-view-details:not(:disabled):hover:active {\n    transform: scale(1.05) translateY(.125rem);\n}\n\n.add-todo:hover {\n    background-color: var(--todo-btn-hover);\n}\n\n.add-todo-btn:focus,\n.add-project:focus,\n.close-view-details:focus {\n    outline: 0 solid transparent;\n}\n  \n.add-todo-btn:focus:before,\n.add-project:focus:before,\n.close-view-details:focus:before {\ncontent: "";\nleft: calc(-1*.375rem);\npointer-events: none;\nposition: absolute;\ntop: calc(-1*.375rem);\ntransition: border-radius;\nuser-select: none;\n}\n\n.add-todo-btn:focus:not(:focus-visible),\n.add-project:focus:not(:focus-visible),\n.close-view-details:focus:not(:focus-visible) {\noutline: 0 solid transparent;\n}\n\n.add-todo-btn:focus:not(:focus-visible):before,\n.add-project:focus:not(:focus-visible):before,\n.close-view-details:focus:not(:focus-visible):before {\nborder-width: 0;\n}\n\n.add-todo-btn:not(:disabled):active,\n.add-project:not(:disabled):active,\n.close-view-details:not(:disabled):active {\ntransform: translateY(.125rem);\n}\n\n\n.todo-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    box-sizing: border-box;\n    padding: 4rem 0 0 2rem;\n}\n\n.todo-container h1 {\n    font-size: 2rem;\n}\n\n.todo-list {\n    max-width: 100%;\n    max-height: 37.5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    padding: 1rem;\n    overflow-y: auto;\n    overflow-x: hidden;\n    /* scrollbar-gutter: stable; */\n    /* scrollbar-color: #6969dd #e0e0e0;\n    scrollbar-width: thin; */\n\n}\n\n.todo-list::-webkit-scrollbar {\n    width: 5px;\n  }\n  \n  .todo-list::-webkit-scrollbar-track {\n    background-color: var(--main-color);\n    border-radius: 100px;\n  }\n  \n  .todo-list::-webkit-scrollbar-thumb {\n    background-color: var(--accent-color);\n    /* box-shadow: inset 0 0 6px var(--accent-color); */\n    border-radius: 100px;\n  }\n\n#todo0 {\n    display: none;\n}\n\n.todo-wrapper {\n    width: clamp(400px, 50%, 750px);\n    padding: 1rem 1rem 1rem 1rem;\n    border-radius: 5px;\n    box-shadow: 2px 1px 2px rgb(var(--todo-hover), 0.15);\n    transition: all 0.3s ease-in-out;\n}\n\n.todo-wrapper.priority-low {\n    border-left: 3px solid var(--priority-low);\n}\n\n.todo-wrapper.priority-medium {\n    border-left: 3px solid var(--priority-medium);\n}\n\n.todo-wrapper.priority-high {\n    border-left: 3px solid var(--priority-high);\n}\n\n.todo-wrapper:after {\n    opacity: 0;\n    border-radius: 5px;\n    box-shadow: 0 5px 15px rgb(var(--todo-hover), 0.3);\n    transition: opacity 0.3s ease-in-out;\n}\n\n.todo-wrapper:hover {\n    transform: scale(1.02, 1.02);\n}\n\n/* Fade in the pseudo-element with the bigger shadow */\n.todo-wrapper:hover::after {\nopacity: 1;\n}\n\n.todo-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n.todo-item-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.todo-item-actions button {\n    color: var(--text-color);\n    background: none;\n    height: 19px;\n    width: 25px;\n    border-radius: 5px;\n    font-size: 1.1rem;\n    cursor: pointer;\n}\n\n.todo-item-actions button:hover {\n    background: var(--todo-btn-hover);\n}\n\n.todo-item-due-date {\n    font-weight: 500;\n    font-size: 0.8rem;\n}\n\n.todo-item-actions button.item-details {\n    font-size: 0.625rem;\n    font-weight: 700;\n    width: 45px;\n    border: 1px solid rgb(105, 105, 105);\n}\n\n.todo-item-actions button.item-details:hover {\n    background-color: var(--accent-color);\n    color: white;\n}\n\n.todo-item .cbx {\n-webkit-user-select: none;\nuser-select: none;\n-webkit-tap-highlight-color: transparent;\ncursor: pointer;\n}\n.todo-item .cbx span {\ndisplay: inline-block;\nvertical-align: middle;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child {\nposition: relative;\nwidth: 24px;\nheight: 24px;\nborder-radius: 50%;\ntransform: scale(1);\nvertical-align: middle;\nborder: 1px solid #B9B8C3;\ntransition: all 0.2s ease;\n}\n.todo-item .cbx span:first-child svg {\nposition: absolute;\nz-index: 1;\ntop: 8px;\nleft: 6px;\nfill: none;\nstroke: white;\nstroke-width: 2;\nstroke-linecap: round;\nstroke-linejoin: round;\nstroke-dasharray: 16px;\nstroke-dashoffset: 16px;\ntransition: all 0.3s ease;\ntransition-delay: 0.1s;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child:before {\ncontent: "";\nwidth: 100%;\nheight: 100%;\nbackground: #579BB1;\ndisplay: block;\ntransform: scale(0);\nopacity: 1;\nborder-radius: 50%;\ntransition-delay: 0.2s;\n}\n.todo-item .cbx span:last-child {\nmargin-left: 8px;\n}\n.todo-item .cbx span:last-child:after {\ncontent: "";\nposition: absolute;\ntop: 8px;\nleft: 0;\nheight: 1px;\nwidth: 100%;\nbackground: #B9B8C3;\ntransform-origin: 0 0;\ntransform: scaleX(0);\n}\n.todo-item .cbx:hover span:first-child {\nborder-color: var(--accent-color);\n}\n\n.todo-item .inp-cbx:checked + .cbx span:first-child {\nborder-color: var(--accent-color);\nbackground: var(--accent-color);\nanimation: cbx-15 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child svg {\nstroke-dashoffset: 0;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child:before {\ntransform: scale(2.2);\nopacity: 0;\ntransition: all 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child {\ncolor: #B9B8C3;\ntransition: all 0.3s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child:after {\ntransform: scaleX(1);\ntransition: all 0.3s ease;\n}\n\n@keyframes cbx-15 {\n50% {\n    transform: scale(1.2);\n}\n}\n\n\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap\');\n\n/* || GLOBAL STYLES */\n:root,\n:root.light {\n    --accent-color: #03A696;\n    --aside-color: #e0ddd1;\n    --aside-hover-color: #dbd9cf;\n    --main-color: #ECE8DD;\n    --text-color: 0, 0, 0;\n    --todo-hover: 0, 0, 0;\n    --todo-btn-hover: #e0dcd1;\n    --priority-low: #36AE7C;\n    --priority-medium: #FF6E31;\n    --priority-high: #EB5353;\n\n}\n:root.dark {\n     --aside-color: #272727;\n    --aside-hover-color: #353535;\n    --main-color: #171717;\n    --text-color: 255, 255, 255;\n    --todo-hover: 153, 153, 153;\n    --todo-btn-hover: #252525;\n}\n\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\n\nbody {\n    color: rgb(var(--text-color), 0.8);\n    width: 100vw;\n    height: 100vh;\n    font-family: \'Open Sans\', sans-serif;\n    overflow: hidden; \n}\n\n\n/* FORM OVERLAY FORM */\n\n.overlay-create-new, .overlay-edit, .overlay-view-details {\n    z-index: 2;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 10px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    /* display: none; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    transition: opacity 0.3s 0s, visibility 0s 0.3s;\n  }\n  .is-visible {\n    opacity: 1;\n    visibility: visible;\n    /* display: flex; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0s;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n  }\n  \n  form.create-new, form.edit, .view-details-container {\n    \n    background-color: var(--aside-color);\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n    box-sizing: border-box;\n    width: clamp(350px, 50%, 600px);\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    border-radius: 15px;\n    padding: 1rem;\n\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px);\n    /* Force Hardware Acceleration in WebKit */\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -webkit-transition-property: -webkit-transform;\n    -moz-transition-property: -moz-transform;\n    transition-property: transform;\n    -webkit-transition-duration: 0.3s;\n    -moz-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n  }\n\n.create-new-main, .edit-main {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.create-new-main input, .edit-main input {\n    outline: none;\n    font-size: 0.8rem;\n    color: var(--text-color);\n    background-color: var(--aside-color);\n}\n\n.create-new-main input:nth-child(1), .edit-main input:nth-child(1) {\n    font-size: 1.2rem;\n    font-weight: 700;\n}\n\n.create-new-options, .edit-options {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n\n\n\n.priority {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    gap: 0.8rem;\n}\n\n.priority-radios {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    /* cursor: pointer; */\n}\n\ninput[type="radio"] {\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: #fff;\n    /* Not removed via appearance */\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 50%;\n    display: grid;\n    place-content: center;\n    cursor: pointer;\n}\n\ninput[type="radio"]::before {\ncontent: "";\nwidth: 0.65em;\nheight: 0.65em;\nborder-radius: 50%;\ntransform: scale(0);\ntransition: 120ms transform ease-in-out;\nbox-shadow: inset 1em 1em var(--accent-color);\n}\n\ninput[type="radio"]:checked::before {\ntransform: scale(1);\n}\n\n\n\n#priority-low, #priority-low-edit {\n    border: 0.15em solid var(--priority-low);\n}\n\n#priority-low::before, #priority-low-edit::before {\n    box-shadow: inset 1em 1em var(--priority-low);\n}\n\n#priority-medium, #priority-medium-edit {\n    border: 0.15em solid var(--priority-medium);\n}\n\n#priority-medium::before, #priority-medium-edit::before {\n    box-shadow: inset 1em 1em var(--priority-medium);\n}\n\n#priority-high, #priority-high-edit {\n    border: 0.15em solid var(--priority-high);\n}\n\n#priority-high::before, #priority-high-edit::before {\n    box-shadow: inset 1em 1em var(--priority-high);\n}\n\n.create-new-options-main,\n.create-new-actions,\n.edit-options-main,\n.edit-actions {\n    display: flex;\n    gap: 0.8rem;\n}\n\n.create-new-options-main, .edit-options-main {\n    align-self: flex-end;\n} \n\n.create-new-options button,  \n.create-new-actions button,\n.edit-options button,  \n.edit-actions button {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 0.8rem;\n    padding: 0.4rem 0.6rem;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n/* .due-date {\n    \n    gap: 5px;\n} */\n\n#new-due-date, #edit-due-date {\n    display: inline-flex;\n    align-items: flex-end;\n    font-size: 0.8rem;\n    outline: none;\n    background-color: transparent;\n    appearance: none;\n    text-transform: uppercase;\n    border: 1px solid var(--accent-color);\n    border-radius: 5px;\n    padding: 0.3rem 0.5rem;\n    user-select: none;\n}\n\ninput::-webkit-datetime-edit-day-field:focus,\ninput::-webkit-datetime-edit-month-field:focus,\ninput::-webkit-datetime-edit-year-field:focus {\n    background-color: var(--accent-color);\n    color: white;\n    outline: none;\n}\n\n.create-new-divider, .edit-divider {\n    width: 100%;\n    height: 1px;\n    background-color: #3b3b3b5b;\n}\n\n.create-new-actions, .edit-actions {\n    align-self: flex-end;\n    font-weight: 600;\n}\n\n.close-view-details {\n    position: absolute;\n    font-size: 1.2rem;\n    right: 14px;\n    top: 14px;\n    cursor: pointer;\n}\n\n.view-details-content {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.view-title, \n.view-desc, \n.view-priority, \n.view-due-date,\n.view-date-create {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n/* || CONTENTS */\n.contents {\n    height: 100%;\n    display: grid;\n    grid-template-columns: auto 3fr;\n    grid-template-rows: auto 1fr;\n    grid-template-areas: \n    "header header"\n    "nav main";\n}\n\na {\n    color: inherit;\n    text-decoration: none;\n    pointer-events: none;\n}\n\n/* || HEADER */\n.header {\n    grid-area: header;\n    color: white;\n    height: 50px;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 2rem;\n    background-color: var(--accent-color);\n}\n\n.header-nav {\n    display: flex;\n    gap: 0.625rem;\n}\n\n.header button {\n    color: white;\n    background: none;\n    height: 24px;\n    width: 24px;\n    border-radius: 5px;\n    font-size: 1.4rem;\n}\n\n.header button:hover {\n    background: hsla(0,0%,100%,.2);\n}\n\n.header-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.625rem;\n}\n\n\n/* || TOGGLE DARK/LIGHT THEME */\n.toggle-theme input[type="checkbox"] {\nvisibility: hidden;\ndisplay: none;\n}\n\n.toggle-theme *,\n.toggle-theme ::after,\n.toggle-theme ::before {\nbox-sizing: border-box;\n}\n\n/* The switch - the box around the slider */\n.toggle-theme .switch {\n--width-of-switch: 2.5em;\n--height-of-switch: 1.3em;\n/* size of sliding icon -- sun and moon */\n--size-of-icon: 1em;\n/* it is like a inline-padding of switch */\n--slider-offset: 0.3em;\nposition: relative;\nwidth: var(--width-of-switch);\nheight: var(--height-of-switch);\ndisplay: inline-block;\n}\n\n/* The slider */\n.toggle-theme .slider {\nposition: absolute;\ncursor: pointer;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\n/* background-color: #f4f4f5; */\nbackground-color: var(--aside-color);\ntransition: .4s;\nborder-radius: 30px;\n}\n\n.toggle-theme .slider:before {\nposition: absolute;\ncontent: "";\nheight: var(--size-of-icon,1.4em);\nwidth: var(--size-of-icon,1.4em);\nborder-radius: 20px;\nleft: var(--slider-offset,0.3em);\ntop: 50%;\ntransform: translateY(-50%);\n/* background: linear-gradient(40deg,#ff0080,#ff8c00 70%); */\nbackground-color: var(--accent-color);\ntransition: .4s;\n}\n\n.toggle-theme input:checked + .slider {\n/* background-color: #303136; */\nbackground: var(--aside-color);\n}\n\n.toggle-theme input:checked + .slider:before {\nleft: calc(100% - (var(--size-of-icon,1.4em) + var(--slider-offset,0.3em)));\n/* background: #303136; */\nbackground: var(--aside-color);\n/* change the value of second inset in box-shadow to change the angle and direction of the moon  */\n/* box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb; */\nbox-shadow: inset -3px -2px 5px -2px var(--accent-color), inset -10px -4px 0 0 var(--accent-color);\n\n}\n\n\n/* || ASIDE */\nnav {\n    width: 250px;\n    grid-area: nav;\n    overflow: auto;\n    overflow-x: hidden;\n    /* transition: all 1s; */\n    transition: all .5s cubic-bezier(0.4, 0, 0.2, 1);\n    background-color: var(--aside-color);\n}\n\n\n.sidebar-content-nav {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 4rem 1rem 1rem;\n}\n\n.side-nav {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 5px;\n    border-radius: 8px;\n    cursor: pointer;\n}\n\n.side-nav:hover, .project-item:hover, .project-title-container:hover {\n    background-color: var(--aside-hover-color);\n}\n\n.sidebar-content-projects {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 0 1rem 0 1rem;\n}\n\n.project-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n.project-title-container .add-project {\n    cursor: pointer;\n    font-size: 1.4rem;\n}\n\n.project-title {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 1.2rem;\n    padding: 5px;\n    border-radius: 8px;\n}\n\n.project-item {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 5px 5px 5px 10px;\n    border-radius: 8px;\n}\n\n.dot {\n    height: 13px;\n    width: 13px;\n    background-color: #b6b6b6;\n    border-radius: 50%;\n    flex-shrink: 0;\n}\n\n/* || MAIN */\n.main-container {\n    grid-area: main;\n    max-height: 100%;\n    max-width: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--main-color);\n    padding-bottom: 4rem;\n}\n\n.main h1 {\n    font-weight: 700;\n}\n\n.main .add-todo {\n    width: clamp(300px, 50%, 750px);\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    border-radius: 15px;\n    padding-left: 5px;\n}\n\n.add-todo-btn, .add-project {\n    color: var(--text-color);\n    margin-top: 7px;\n    background: none;\n    font-size: 2rem;\n    border-radius: 8px;\n    cursor: pointer;\n    transform: translateZ(0) scale(1);\n    transition: transform .2s;\n}\n\n.add-todo-btn:not(:disabled):hover,\n.add-project:not(:disabled):hover,\n.close-view-details:not(:disabled):hover {\n    transform: scale(1.05);\n}\n\n.add-todo-btn:not(:disabled):hover:active,\n.add-project:not(:disabled):hover:active,\n.close-view-details:not(:disabled):hover:active {\n    transform: scale(1.05) translateY(.125rem);\n}\n\n.add-todo:hover {\n    background-color: var(--todo-btn-hover);\n}\n\n.add-todo-btn:focus,\n.add-project:focus,\n.close-view-details:focus {\n    outline: 0 solid transparent;\n}\n  \n.add-todo-btn:focus:before,\n.add-project:focus:before,\n.close-view-details:focus:before {\ncontent: "";\nleft: calc(-1*.375rem);\npointer-events: none;\nposition: absolute;\ntop: calc(-1*.375rem);\ntransition: border-radius;\nuser-select: none;\n}\n\n.add-todo-btn:focus:not(:focus-visible),\n.add-project:focus:not(:focus-visible),\n.close-view-details:focus:not(:focus-visible) {\noutline: 0 solid transparent;\n}\n\n.add-todo-btn:focus:not(:focus-visible):before,\n.add-project:focus:not(:focus-visible):before,\n.close-view-details:focus:not(:focus-visible):before {\nborder-width: 0;\n}\n\n.add-todo-btn:not(:disabled):active,\n.add-project:not(:disabled):active,\n.close-view-details:not(:disabled):active {\ntransform: translateY(.125rem);\n}\n\n\n.todo-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    box-sizing: border-box;\n    padding: 4rem 0 0 2rem;\n}\n\n.todo-container h1 {\n    font-size: 2rem;\n}\n\n.todo-list {\n    max-width: 100%;\n    max-height: 37.5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    padding: 1rem;\n    overflow-y: auto;\n    overflow-x: hidden;\n    /* scrollbar-gutter: stable; */\n    /* scrollbar-color: #6969dd #e0e0e0;\n    scrollbar-width: thin; */\n\n}\n\n.todo-list::-webkit-scrollbar {\n    width: 5px;\n  }\n  \n  .todo-list::-webkit-scrollbar-track {\n    background-color: var(--main-color);\n    border-radius: 100px;\n  }\n  \n  .todo-list::-webkit-scrollbar-thumb {\n    background-color: var(--accent-color);\n    /* box-shadow: inset 0 0 6px var(--accent-color); */\n    border-radius: 100px;\n  }\n\n#todo0 {\n    display: none;\n}\n\n.todo-wrapper {\n    width: clamp(400px, 50%, 750px);\n    padding: 1rem 1rem 1rem 1rem;\n    border-radius: 5px;\n    box-shadow: 2px 1px 2px rgb(var(--todo-hover), 0.15);\n    transition: all 0.3s ease-in-out;\n}\n\n.todo-wrapper.priority-low {\n    border-left: 3px solid var(--priority-low);\n}\n\n.todo-wrapper.priority-medium {\n    border-left: 3px solid var(--priority-medium);\n}\n\n.todo-wrapper.priority-high {\n    border-left: 3px solid var(--priority-high);\n}\n\n.todo-wrapper:after {\n    opacity: 0;\n    border-radius: 5px;\n    box-shadow: 0 5px 15px rgb(var(--todo-hover), 0.3);\n    transition: opacity 0.3s ease-in-out;\n}\n\n.todo-wrapper:hover {\n    transform: scale(1.02, 1.02);\n}\n\n/* Fade in the pseudo-element with the bigger shadow */\n.todo-wrapper:hover::after {\nopacity: 1;\n}\n\n.todo-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n.todo-item-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.todo-item-actions button {\n    color: var(--text-color);\n    background: none;\n    height: 19px;\n    width: 25px;\n    border-radius: 5px;\n    font-size: 1.1rem;\n    cursor: pointer;\n}\n\n.todo-item-actions button:hover {\n    background: var(--todo-btn-hover);\n}\n\n.todo-item-due-date {\n    font-weight: 500;\n    font-size: 0.8rem;\n}\n\n.todo-item-actions button.item-details {\n    font-size: 0.625rem;\n    font-weight: 700;\n    width: 45px;\n    border: 1px solid rgb(105, 105, 105);\n}\n\n.todo-item-actions button.item-details:hover {\n    background-color: var(--accent-color);\n    color: white;\n}\n\n.todo-item .cbx {\n-webkit-user-select: none;\nuser-select: none;\n-webkit-tap-highlight-color: transparent;\ncursor: pointer;\n}\n.todo-item .cbx span {\ndisplay: inline-block;\nvertical-align: middle;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child {\nposition: relative;\nwidth: 24px;\nheight: 24px;\nborder-radius: 50%;\ntransform: scale(1);\nvertical-align: middle;\nborder: 1px solid #B9B8C3;\ntransition: all 0.2s ease;\n}\n.todo-item .cbx span:first-child svg {\nposition: absolute;\nz-index: 1;\ntop: 8px;\nleft: 6px;\nfill: none;\nstroke: white;\nstroke-width: 2;\nstroke-linecap: round;\nstroke-linejoin: round;\nstroke-dasharray: 16px;\nstroke-dashoffset: 16px;\ntransition: all 0.3s ease;\ntransition-delay: 0.1s;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child:before {\ncontent: "";\nwidth: 100%;\nheight: 100%;\nbackground: #579BB1;\ndisplay: block;\ntransform: scale(0);\nopacity: 1;\nborder-radius: 50%;\ntransition-delay: 0.2s;\n}\n.todo-item .cbx span:last-child {\nmargin-left: 8px;\n}\n.todo-item .cbx span:last-child:after {\ncontent: "";\nposition: absolute;\ntop: 8px;\nleft: 0;\nheight: 1px;\nwidth: 100%;\nbackground: #B9B8C3;\ntransform-origin: 0 0;\ntransform: scaleX(0);\n}\n.todo-item .cbx:hover span:first-child {\nborder-color: var(--accent-color);\n}\n\n.todo-item .inp-cbx:checked + .cbx span:first-child {\nborder-color: var(--accent-color);\nbackground: var(--accent-color);\nanimation: cbx-15 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child svg {\nstroke-dashoffset: 0;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child:before {\ntransform: scale(2.2);\nopacity: 0;\ntransition: all 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child {\ncolor: #B9B8C3;\ntransition: all 0.3s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child:after {\ntransform: scaleX(1);\ntransition: all 0.3s ease;\n}\n\n@keyframes cbx-15 {\n50% {\n    transform: scale(1.2);\n}\n}\n\n\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],d=o.base?s[0]+o.base:s[0],l=i[d]||0,c="".concat(d," ").concat(l);i[d]=l+1;var u=t(c),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=r(m,o);o.byIndex=A,e.splice(A,0,{identifier:c,updater:p,references:1})}a.push(c)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var s=o(n,r),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),A=t(565),s=t.n(A),d=t(216),l=t.n(d),c=t(589),u=t.n(c),m=t(426),p={};function f(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function h(n){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},h(n)}function C(n){return f(1,arguments),n instanceof Date||"object"===h(n)&&"[object Date]"===Object.prototype.toString.call(n)}function b(n){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},b(n)}function g(n){f(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===b(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function B(n){if(f(1,arguments),!C(n)&&"number"!=typeof n)return!1;var e=g(n);return!isNaN(Number(e))}function v(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function w(n,e){f(2,arguments);var t=g(n).getTime(),o=v(e);return new Date(t+o)}function y(n,e){f(2,arguments);var t=v(e);return w(n,-t)}p.styleTagTransform=u(),p.setAttributes=s(),p.insert=a().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=l(),e()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;var x=864e5;function I(n){f(1,arguments);var e=1,t=g(n),o=t.getUTCDay(),r=(o<e?7:0)+o-e;return t.setUTCDate(t.getUTCDate()-r),t.setUTCHours(0,0,0,0),t}function k(n){f(1,arguments);var e=g(n),t=e.getUTCFullYear(),o=new Date(0);o.setUTCFullYear(t+1,0,4),o.setUTCHours(0,0,0,0);var r=I(o),i=new Date(0);i.setUTCFullYear(t,0,4),i.setUTCHours(0,0,0,0);var a=I(i);return e.getTime()>=r.getTime()?t+1:e.getTime()>=a.getTime()?t:t-1}function E(n){f(1,arguments);var e=k(n),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var o=I(t);return o}var T=6048e5,D={};function S(){return D}function M(n,e){var t,o,r,i,a,A,s,d;f(1,arguments);var l=S(),c=v(null!==(t=null!==(o=null!==(r=null!==(i=null==e?void 0:e.weekStartsOn)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(A=a.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==r?r:l.weekStartsOn)&&void 0!==o?o:null===(s=l.locale)||void 0===s||null===(d=s.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==t?t:0);if(!(c>=0&&c<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=g(n),m=u.getUTCDay(),p=(m<c?7:0)+m-c;return u.setUTCDate(u.getUTCDate()-p),u.setUTCHours(0,0,0,0),u}function z(n,e){var t,o,r,i,a,A,s,d;f(1,arguments);var l=g(n),c=l.getUTCFullYear(),u=S(),m=v(null!==(t=null!==(o=null!==(r=null!==(i=null==e?void 0:e.firstWeekContainsDate)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(A=a.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==r?r:u.firstWeekContainsDate)&&void 0!==o?o:null===(s=u.locale)||void 0===s||null===(d=s.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==t?t:1);if(!(m>=1&&m<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var p=new Date(0);p.setUTCFullYear(c+1,0,m),p.setUTCHours(0,0,0,0);var h=M(p,e),C=new Date(0);C.setUTCFullYear(c,0,m),C.setUTCHours(0,0,0,0);var b=M(C,e);return l.getTime()>=h.getTime()?c+1:l.getTime()>=b.getTime()?c:c-1}function j(n,e){var t,o,r,i,a,A,s,d;f(1,arguments);var l=S(),c=v(null!==(t=null!==(o=null!==(r=null!==(i=null==e?void 0:e.firstWeekContainsDate)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(A=a.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==r?r:l.firstWeekContainsDate)&&void 0!==o?o:null===(s=l.locale)||void 0===s||null===(d=s.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==t?t:1),u=z(n,e),m=new Date(0);m.setUTCFullYear(u,0,c),m.setUTCHours(0,0,0,0);var p=M(m,e);return p}var Y=6048e5;function q(n,e){for(var t=n<0?"-":"",o=Math.abs(n).toString();o.length<e;)o="0"+o;return t+o}const W=function(n,e){var t=n.getUTCFullYear(),o=t>0?t:1-t;return q("yy"===e?o%100:o,e.length)},U=function(n,e){var t=n.getUTCMonth();return"M"===e?String(t+1):q(t+1,2)},L=function(n,e){return q(n.getUTCDate(),e.length)},P=function(n,e){return q(n.getUTCHours()%12||12,e.length)},O=function(n,e){return q(n.getUTCHours(),e.length)},N=function(n,e){return q(n.getUTCMinutes(),e.length)},F=function(n,e){return q(n.getUTCSeconds(),e.length)},G=function(n,e){var t=e.length,o=n.getUTCMilliseconds();return q(Math.floor(o*Math.pow(10,t-3)),e.length)};var X={G:function(n,e,t){var o=n.getUTCFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(o,{width:"abbreviated"});case"GGGGG":return t.era(o,{width:"narrow"});default:return t.era(o,{width:"wide"})}},y:function(n,e,t){if("yo"===e){var o=n.getUTCFullYear(),r=o>0?o:1-o;return t.ordinalNumber(r,{unit:"year"})}return W(n,e)},Y:function(n,e,t,o){var r=z(n,o),i=r>0?r:1-r;return"YY"===e?q(i%100,2):"Yo"===e?t.ordinalNumber(i,{unit:"year"}):q(i,e.length)},R:function(n,e){return q(k(n),e.length)},u:function(n,e){return q(n.getUTCFullYear(),e.length)},Q:function(n,e,t){var o=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"Q":return String(o);case"QQ":return q(o,2);case"Qo":return t.ordinalNumber(o,{unit:"quarter"});case"QQQ":return t.quarter(o,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(o,{width:"narrow",context:"formatting"});default:return t.quarter(o,{width:"wide",context:"formatting"})}},q:function(n,e,t){var o=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"q":return String(o);case"qq":return q(o,2);case"qo":return t.ordinalNumber(o,{unit:"quarter"});case"qqq":return t.quarter(o,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(o,{width:"narrow",context:"standalone"});default:return t.quarter(o,{width:"wide",context:"standalone"})}},M:function(n,e,t){var o=n.getUTCMonth();switch(e){case"M":case"MM":return U(n,e);case"Mo":return t.ordinalNumber(o+1,{unit:"month"});case"MMM":return t.month(o,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(o,{width:"narrow",context:"formatting"});default:return t.month(o,{width:"wide",context:"formatting"})}},L:function(n,e,t){var o=n.getUTCMonth();switch(e){case"L":return String(o+1);case"LL":return q(o+1,2);case"Lo":return t.ordinalNumber(o+1,{unit:"month"});case"LLL":return t.month(o,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(o,{width:"narrow",context:"standalone"});default:return t.month(o,{width:"wide",context:"standalone"})}},w:function(n,e,t,o){var r=function(n,e){f(1,arguments);var t=g(n),o=M(t,e).getTime()-j(t,e).getTime();return Math.round(o/Y)+1}(n,o);return"wo"===e?t.ordinalNumber(r,{unit:"week"}):q(r,e.length)},I:function(n,e,t){var o=function(n){f(1,arguments);var e=g(n),t=I(e).getTime()-E(e).getTime();return Math.round(t/T)+1}(n);return"Io"===e?t.ordinalNumber(o,{unit:"week"}):q(o,e.length)},d:function(n,e,t){return"do"===e?t.ordinalNumber(n.getUTCDate(),{unit:"date"}):L(n,e)},D:function(n,e,t){var o=function(n){f(1,arguments);var e=g(n),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var o=e.getTime(),r=t-o;return Math.floor(r/x)+1}(n);return"Do"===e?t.ordinalNumber(o,{unit:"dayOfYear"}):q(o,e.length)},E:function(n,e,t){var o=n.getUTCDay();switch(e){case"E":case"EE":case"EEE":return t.day(o,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(o,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(o,{width:"short",context:"formatting"});default:return t.day(o,{width:"wide",context:"formatting"})}},e:function(n,e,t,o){var r=n.getUTCDay(),i=(r-o.weekStartsOn+8)%7||7;switch(e){case"e":return String(i);case"ee":return q(i,2);case"eo":return t.ordinalNumber(i,{unit:"day"});case"eee":return t.day(r,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(r,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},c:function(n,e,t,o){var r=n.getUTCDay(),i=(r-o.weekStartsOn+8)%7||7;switch(e){case"c":return String(i);case"cc":return q(i,e.length);case"co":return t.ordinalNumber(i,{unit:"day"});case"ccc":return t.day(r,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(r,{width:"narrow",context:"standalone"});case"cccccc":return t.day(r,{width:"short",context:"standalone"});default:return t.day(r,{width:"wide",context:"standalone"})}},i:function(n,e,t){var o=n.getUTCDay(),r=0===o?7:o;switch(e){case"i":return String(r);case"ii":return q(r,e.length);case"io":return t.ordinalNumber(r,{unit:"day"});case"iii":return t.day(o,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(o,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(o,{width:"short",context:"formatting"});default:return t.day(o,{width:"wide",context:"formatting"})}},a:function(n,e,t){var o=n.getUTCHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(o,{width:"narrow",context:"formatting"});default:return t.dayPeriod(o,{width:"wide",context:"formatting"})}},b:function(n,e,t){var o,r=n.getUTCHours();switch(o=12===r?"noon":0===r?"midnight":r/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(o,{width:"narrow",context:"formatting"});default:return t.dayPeriod(o,{width:"wide",context:"formatting"})}},B:function(n,e,t){var o,r=n.getUTCHours();switch(o=r>=17?"evening":r>=12?"afternoon":r>=4?"morning":"night",e){case"B":case"BB":case"BBB":return t.dayPeriod(o,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(o,{width:"narrow",context:"formatting"});default:return t.dayPeriod(o,{width:"wide",context:"formatting"})}},h:function(n,e,t){if("ho"===e){var o=n.getUTCHours()%12;return 0===o&&(o=12),t.ordinalNumber(o,{unit:"hour"})}return P(n,e)},H:function(n,e,t){return"Ho"===e?t.ordinalNumber(n.getUTCHours(),{unit:"hour"}):O(n,e)},K:function(n,e,t){var o=n.getUTCHours()%12;return"Ko"===e?t.ordinalNumber(o,{unit:"hour"}):q(o,e.length)},k:function(n,e,t){var o=n.getUTCHours();return 0===o&&(o=24),"ko"===e?t.ordinalNumber(o,{unit:"hour"}):q(o,e.length)},m:function(n,e,t){return"mo"===e?t.ordinalNumber(n.getUTCMinutes(),{unit:"minute"}):N(n,e)},s:function(n,e,t){return"so"===e?t.ordinalNumber(n.getUTCSeconds(),{unit:"second"}):F(n,e)},S:function(n,e){return G(n,e)},X:function(n,e,t,o){var r=(o._originalDate||n).getTimezoneOffset();if(0===r)return"Z";switch(e){case"X":return R(r);case"XXXX":case"XX":return Q(r);default:return Q(r,":")}},x:function(n,e,t,o){var r=(o._originalDate||n).getTimezoneOffset();switch(e){case"x":return R(r);case"xxxx":case"xx":return Q(r);default:return Q(r,":")}},O:function(n,e,t,o){var r=(o._originalDate||n).getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+H(r,":");default:return"GMT"+Q(r,":")}},z:function(n,e,t,o){var r=(o._originalDate||n).getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+H(r,":");default:return"GMT"+Q(r,":")}},t:function(n,e,t,o){var r=o._originalDate||n;return q(Math.floor(r.getTime()/1e3),e.length)},T:function(n,e,t,o){return q((o._originalDate||n).getTime(),e.length)}};function H(n,e){var t=n>0?"-":"+",o=Math.abs(n),r=Math.floor(o/60),i=o%60;if(0===i)return t+String(r);var a=e||"";return t+String(r)+a+q(i,2)}function R(n,e){return n%60==0?(n>0?"-":"+")+q(Math.abs(n)/60,2):Q(n,e)}function Q(n,e){var t=e||"",o=n>0?"-":"+",r=Math.abs(n);return o+q(Math.floor(r/60),2)+t+q(r%60,2)}const Z=X;var V=function(n,e){switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});default:return e.date({width:"full"})}},J=function(n,e){switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});default:return e.time({width:"full"})}};const K={p:J,P:function(n,e){var t,o=n.match(/(P+)(p+)?/)||[],r=o[1],i=o[2];if(!i)return V(n,e);switch(r){case"P":t=e.dateTime({width:"short"});break;case"PP":t=e.dateTime({width:"medium"});break;case"PPP":t=e.dateTime({width:"long"});break;default:t=e.dateTime({width:"full"})}return t.replace("{{date}}",V(r,e)).replace("{{time}}",J(i,e))}};function $(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var _=["D","DD"],nn=["YY","YYYY"];function en(n){return-1!==_.indexOf(n)}function tn(n){return-1!==nn.indexOf(n)}function on(n,e,t){if("YYYY"===n)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===n)throw new RangeError("Use `yy` instead of `YY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===n)throw new RangeError("Use `d` instead of `D` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===n)throw new RangeError("Use `dd` instead of `DD` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var rn={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function an(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,o=n.formats[t]||n.formats[n.defaultWidth];return o}}const An={date:an({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:an({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:an({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var sn={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function dn(n){return function(e,t){var o;if("formatting"===(null!=t&&t.context?String(t.context):"standalone")&&n.formattingValues){var r=n.defaultFormattingWidth||n.defaultWidth,i=null!=t&&t.width?String(t.width):r;o=n.formattingValues[i]||n.formattingValues[r]}else{var a=n.defaultWidth,A=null!=t&&t.width?String(t.width):n.defaultWidth;o=n.values[A]||n.values[a]}return o[n.argumentCallback?n.argumentCallback(e):e]}}const ln={ordinalNumber:function(n,e){var t=Number(n),o=t%100;if(o>20||o<10)switch(o%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:dn({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:dn({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:dn({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:dn({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:dn({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function cn(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=t.width,r=o&&n.matchPatterns[o]||n.matchPatterns[n.defaultMatchWidth],i=e.match(r);if(!i)return null;var a,A=i[0],s=o&&n.parsePatterns[o]||n.parsePatterns[n.defaultParseWidth],d=Array.isArray(s)?mn(s,(function(n){return n.test(A)})):un(s,(function(n){return n.test(A)}));a=n.valueCallback?n.valueCallback(d):d,a=t.valueCallback?t.valueCallback(a):a;var l=e.slice(A.length);return{value:a,rest:l}}}function un(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function mn(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}var pn,fn={ordinalNumber:(pn={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}},function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.match(pn.matchPattern);if(!t)return null;var o=t[0],r=n.match(pn.parsePattern);if(!r)return null;var i=pn.valueCallback?pn.valueCallback(r[0]):r[0];i=e.valueCallback?e.valueCallback(i):i;var a=n.slice(o.length);return{value:i,rest:a}}),era:cn({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:cn({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:cn({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:cn({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:cn({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const hn={code:"en-US",formatDistance:function(n,e,t){var o,r=rn[n];return o="string"==typeof r?r:1===e?r.one:r.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+o:o+" ago":o},formatLong:An,formatRelative:function(n,e,t,o){return sn[n]},localize:ln,match:fn,options:{weekStartsOn:0,firstWeekContainsDate:1}};var Cn=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,bn=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,gn=/^'([^]*?)'?$/,Bn=/''/g,vn=/[a-zA-Z]/;function wn(n,e,t){var o,r,i,a,A,s,d,l,c,u,m,p,h,C,b,w,x,I;f(2,arguments);var k=String(e),E=S(),T=null!==(o=null!==(r=null==t?void 0:t.locale)&&void 0!==r?r:E.locale)&&void 0!==o?o:hn,D=v(null!==(i=null!==(a=null!==(A=null!==(s=null==t?void 0:t.firstWeekContainsDate)&&void 0!==s?s:null==t||null===(d=t.locale)||void 0===d||null===(l=d.options)||void 0===l?void 0:l.firstWeekContainsDate)&&void 0!==A?A:E.firstWeekContainsDate)&&void 0!==a?a:null===(c=E.locale)||void 0===c||null===(u=c.options)||void 0===u?void 0:u.firstWeekContainsDate)&&void 0!==i?i:1);if(!(D>=1&&D<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var M=v(null!==(m=null!==(p=null!==(h=null!==(C=null==t?void 0:t.weekStartsOn)&&void 0!==C?C:null==t||null===(b=t.locale)||void 0===b||null===(w=b.options)||void 0===w?void 0:w.weekStartsOn)&&void 0!==h?h:E.weekStartsOn)&&void 0!==p?p:null===(x=E.locale)||void 0===x||null===(I=x.options)||void 0===I?void 0:I.weekStartsOn)&&void 0!==m?m:0);if(!(M>=0&&M<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!T.localize)throw new RangeError("locale must contain localize property");if(!T.formatLong)throw new RangeError("locale must contain formatLong property");var z=g(n);if(!B(z))throw new RangeError("Invalid time value");var j=$(z),Y=y(z,j),q={firstWeekContainsDate:D,weekStartsOn:M,locale:T,_originalDate:z},W=k.match(bn).map((function(n){var e=n[0];return"p"===e||"P"===e?(0,K[e])(n,T.formatLong):n})).join("").match(Cn).map((function(o){if("''"===o)return"'";var r=o[0];if("'"===r)return yn(o);var i=Z[r];if(i)return null!=t&&t.useAdditionalWeekYearTokens||!tn(o)||on(o,e,String(n)),null!=t&&t.useAdditionalDayOfYearTokens||!en(o)||on(o,e,String(n)),i(Y,o,T.localize,q);if(r.match(vn))throw new RangeError("Format string contains an unescaped latin alphabet character `"+r+"`");return o})).join("");return W}function yn(n){var e=n.match(gn);return e?e[1].replace(Bn,"'"):n}const xn=document.getElementById("todo0"),In=(n,e,t,o)=>{const r=document.querySelector(".todo-list");let i=Number(r.lastElementChild.id.at(-1));const a=xn.cloneNode(!0),A=a.firstElementChild.firstElementChild.lastElementChild.lastElementChild,s=a.firstElementChild.firstElementChild.firstElementChild,d=a.firstElementChild.firstElementChild.lastElementChild,l=a.firstElementChild.lastElementChild.children,c=l[1],u=l[0],m=l[3];let p=Number(r.lastElementChild.firstElementChild.firstElementChild.firstElementChild.id.at(-1));Number(r.lastElementChild.firstElementChild.firstElementChild.lastElementChild.getAttribute("for").at(-1)),t=zn.getDefaultTaskList()[p].priority,En(a,t),a.id="todo"+(i+1),d.htmlFor="cbx"+(p+1),s.id="cbx"+(p+1),A.innerText=n;let f=kn(o);u.innerText=f;let h=zn.getDefaultTaskList()[p].desc;return c.addEventListener("click",(n=>{Dn.editItem(n,p+1,A.innerText,h,t)})),m.addEventListener("click",(n=>{Dn.openViewDetails()})),xn.parentNode.appendChild(a),a},kn=n=>wn(new Date(n),"MMM do"),En=(n,e)=>{"priority-low"===e?(n.classList.remove("priority-medium"),n.classList.remove("priority-high"),n.classList.add("priority-low")):"priority-medium"===e?(n.classList.remove("priority-low"),n.classList.remove("priority-high"),n.classList.add("priority-medium")):"priority-high"===e&&(n.classList.remove("priority-medium"),n.classList.remove("priority-low"),n.classList.add("priority-high"))},Tn=document.querySelectorAll('input[name="radio"]'),Dn=(()=>{const n=document.querySelector(".overlay-create-new"),e=document.querySelector(".overlay-edit"),t=document.querySelector(".create-new"),o=document.querySelector('form[class="edit"]'),r=document.querySelector(".add-todo-btn"),i=document.querySelectorAll(".cancel-form-btn"),a=(document.querySelector('button[class="form-btn add-task"]'),document.querySelector(".priority-radios"),document.querySelectorAll(".close-view-details")),A=document.querySelector('input[id="name"]'),s=document.querySelector('input[id="description"]'),d=document.querySelector("#new-due-date"),l=document.querySelector('input[id="name-edit"]'),c=document.querySelector('input[id="description-edit"]'),u=document.querySelector("#edit-due-date"),m=document.querySelectorAll('input[name="radio-edit"]'),p=document.querySelector(".overlay-view-details");console.log(m);const h=()=>{n.classList.remove("is-visible"),t.reset()},C=()=>{e.classList.remove("is-visible"),o.reset()};let b;const B=n=>("priority-low"===n?m[0].checked=!0:"priority-medium"===n?m[1].checked=!0:"priority-high"===n&&(m[2].checked=!0),n),v=n=>{let e;return[...n].forEach((n=>{n.checked&&("priority-low"===n.id||"priority-low-edit"===n.id?e="priority-low":"priority-medium"===n.id||"priority-medium-edit"===n.id?e="priority-medium":"priority-high"!==n.id&&"priority-high-edit"!==n.id||(e="priority-high"))})),e};let w="priority-"+v(Tn);console.log(w),r.addEventListener("click",(e=>{n.classList.add("is-visible"),y()})),[...i].forEach((n=>{n.addEventListener("click",(n=>{h(),C()}))})),Array.from(a).forEach((n=>{n.addEventListener("click",(n=>{p.classList.remove("is-visible")}))}));const y=()=>{const n=new Date,e=wn(n,"d"),t=`${wn(n,"MMMM")} ${e} ${wn(n,"yyyy")} ${function(n){return f(1,arguments),g(n).getHours()}(n)}:${wn(n,"mm")}${wn(n,"aaa")}`;return console.log(t),t};return t.addEventListener("submit",(n=>{n.preventDefault(),(()=>{let n=A.value,e=s.value,t=d.value,o=v(Tn);n&&(console.log(n+e+t),jn(n,e,o,t))})(),h()})),o.addEventListener("submit",(n=>{n.preventDefault(),(n=>{n=b;let e=zn.getDefaultTaskList()[n-1],t=document.getElementById(`todo${n}`),o=t.firstElementChild.firstElementChild.lastElementChild.lastElementChild,r=t.firstElementChild.lastElementChild.firstElementChild;e.title=l.value,e.dueDate=u.value;let i=kn(e.dueDate);r.innerText=i,o.innerText=e.title,e.desc=c.value,e.priority=v(m),En(t,e.priority),console.log(e.priority),console.log(e),console.log(zn.getDefaultTaskList())})(),C()})),{setPriority:v,editItem:(n,t,o,r,i,a)=>{b=t,console.log(b),((n,e,t,o,r,i)=>{if("iconify-icon"===n.target.tagName.toLowerCase()){let n=zn.getDefaultTaskList()[e-1];l.value=t,c.value=n.desc,u.value=n.dueDate,r=n.priority,console.log(r),B(r)}})(n,t,o,0,i),e.classList.add("is-visible")},openViewDetails:()=>{p.classList.add("is-visible")}}})(),Sn={title:"Example Todo",desc:"This is an example of a todo",priority:"priority-low",dueDate:"2023-01-08",dateCreated:void 0},Mn={title:"Example Todo 2",desc:"This is the second example of a todo",priority:"priority-medium",dueDate:"2023-01-08",dateCreated:void 0},zn=(()=>{let n=[Sn,Mn];return{getDefaultTaskList:()=>n,addTask:e=>{n.push(e)}}})(),jn=(n,e,t,o,r)=>{let i=((n,e,t,o,r)=>({title:n,desc:e,priority:t,dueDate:o,dateCreated:new Date}))(n,e,t,o);zn.addTask(i),In(n,0,t,o),console.log(zn.getDefaultTaskList())};(()=>{const n=document.getElementById("theme-mode");n.addEventListener("change",(e=>{!0===n.checked?(document.documentElement.classList.remove("light"),document.documentElement.classList.add("dark"),window.localStorage.setItem("mode","dark")):(document.documentElement.classList.remove("dark"),document.documentElement.classList.add("light"),window.localStorage.setItem("mode","light"))}))})(),(()=>{const n=document.querySelector(".open-aside"),e=document.querySelector("nav");e.style.width="250px",n.addEventListener("click",(n=>{t(e)}));const t=n=>{"250px"===n.style.width?n.style.width="0":n.style.width="250px"}})(),(()=>{let n=zn.getDefaultTaskList();for(let e of n)In(e.title,e.desc,e.priority,e.dueDate)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,