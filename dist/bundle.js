(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap);"]),a.push([n.id,'/* || GLOBAL STYLES */\n\n:root.light {\n    --accent-color: #03A696;\n    --aside-color: #e0ddd1;\n    --aside-hover-color: #dbd9cf;\n    --main-color: #ECE8DD;\n    --text-color: 0, 0, 0;\n    --todo-hover: 0, 0, 0;\n    --todo-btn-hover: #e0dcd1;\n    --priority-low: #36AE7C;\n    --priority-medium: #FF6E31;\n    --priority-high: #EB5353;\n    --todo-title-crossed-color: #bebec2;\n    --todo-title-crossed-bg: #b1b1bb;\n\n}\n:root,\n:root.dark {\n    --accent-color: #03A696;\n    --aside-color: #191919;\n    --aside-hover-color: #353535;\n    --main-color: #161616;\n    --text-color: 255, 255, 255;\n    --todo-hover: 153, 153, 153;\n    --todo-btn-hover: #252525;\n    --priority-low: #36AE7C;\n    --priority-medium: #FF6E31;\n    --priority-high: #EB5353;\n    --todo-title-crossed-color: #464646;\n    --todo-title-crossed-bg: #3d3d3d;\n}\n\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\n\nbody {\n    color: rgb(var(--text-color), 0.8);\n    width: 100vw;\n    height: 100vh;\n    font-family: \'Open Sans\', sans-serif;\n    overflow: hidden; \n}\n\n\n/* FORM OVERLAY FORM */\n\n.overlay-create-new,\n.overlay-edit,\n.overlay-view-details,\n.overlay-delete-item-dialogue,\n.overlay-add-new-project {\n    z-index: 2;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 10px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    /* display: none; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    transition: opacity 0.3s 0s, visibility 0s 0.3s;\n}\n\n.is-visible {\n    opacity: 1;\n    visibility: visible;\n    /* display: flex; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0s;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n}\n\n.overlay-delete-item-dialogue {\n    text-align: center;\n}\n  \nform.create-new, \nform.edit, \n.view-details-container, \n.delete-dialogue-contents,\nform.add-new-project {\n\n    background-color: var(--aside-color);\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n    box-sizing: border-box;\n    width: clamp(350px, 50%, 600px);\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    border-radius: 15px;\n    padding: 1rem;\n\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px);\n    /* Force Hardware Acceleration in WebKit */\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -webkit-transition-property: -webkit-transform;\n    -moz-transition-property: -moz-transform;\n    transition-property: transform;\n    -webkit-transition-duration: 0.3s;\n    -moz-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n}\n\n.create-new-main, \n.edit-main {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.add-new-project-main {\n    display: flex;\n    flex-direction: column;\n    font-size: 1.2rem;\n}\n\n.create-new-main input,\n.edit-main input {\n    outline: none;\n    font-size: 0.8rem;\n    color: var(--text-color);\n    background-color: var(--aside-color);\n} \n\n.add-new-project input {\n    border: 1px solid rgb(131, 131, 131);\n    border-radius: 8px;\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    color: var(--text-color);\n    background-color: var(--aside-color);\n    margin: 0.5rem 0 1rem 0;\n}\n\n.add-new-project input:focus {\n    outline: none;\n    border: 1px solid var(--accent-color);\n}\n\n.create-new-main input:nth-child(1), .edit-main input:nth-child(1) {\n    font-size: 1.2rem;\n    font-weight: 700;\n}\n\n.create-new-options, .edit-options {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n\n\n\n.priority {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    gap: 0.8rem;\n}\n\n.priority-radios {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    /* cursor: pointer; */\n}\n\ninput[type="radio"] {\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: var(--main-color);\n    /* Not removed via appearance */\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 50%;\n    display: grid;\n    place-content: center;\n    cursor: pointer;\n}\n\ninput[type="radio"]::before {\n    content: "";\n    width: 0.65em;\n    height: 0.65em;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em var(--accent-color);\n}\n\ninput[type="radio"]:checked::before {\n    transform: scale(1);\n}\n\n\n\n#priority-low, #priority-low-edit {\n    border: 0.15em solid var(--priority-low);\n}\n\n#priority-low::before, #priority-low-edit::before {\n    box-shadow: inset 1em 1em var(--priority-low);\n}\n\n#priority-medium, #priority-medium-edit {\n    border: 0.15em solid var(--priority-medium);\n}\n\n#priority-medium::before, #priority-medium-edit::before {\n    box-shadow: inset 1em 1em var(--priority-medium);\n}\n\n#priority-high, #priority-high-edit {\n    border: 0.15em solid var(--priority-high);\n}\n\n#priority-high::before, #priority-high-edit::before {\n    box-shadow: inset 1em 1em var(--priority-high);\n}\n\n.create-new-options-main,\n.create-new-actions,\n.edit-options-main,\n.edit-actions {\n    display: flex;\n    gap: 0.8rem;\n}\n\n.create-new-options-main, .edit-options-main {\n    align-self: flex-end;\n} \n\n.create-new-options button,  \n.create-new-actions button,\n.edit-options button,  \n.edit-actions button {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 0.8rem;\n    padding: 0.4rem 0.6rem;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.delete-dialogue-options {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.add-project-options  {\n    display: flex;\n    justify-content: flex-end;\n    gap: 1rem;\n}\n\n.dialogue-option,\n.add-project-option {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 0.8rem;\n    padding: 0.4rem 0.6rem;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n/* .due-date {\n    \n    gap: 5px;\n} */\n\n#new-due-date, #edit-due-date {\n    color: var(--text-color);\n    display: inline-flex;\n    align-items: flex-end;\n    font-size: 0.8rem;\n    outline: none;\n    background-color: transparent;\n    appearance: none;\n    text-transform: uppercase;\n    border: 1px solid var(--accent-color);\n    border-radius: 5px;\n    padding: 0.3rem 0.5rem;\n    user-select: none;\n}\n\ninput::-webkit-datetime-edit-day-field:focus,\ninput::-webkit-datetime-edit-month-field:focus,\ninput::-webkit-datetime-edit-year-field:focus {\n    background-color: var(--accent-color);\n    color: white;\n    outline: none;\n}\n\n.create-new-divider, .edit-divider {\n    width: 100%;\n    height: 1px;\n    background-color: #3b3b3b5b;\n}\n\n.create-new-actions, .edit-actions {\n    align-self: flex-end;\n    font-weight: 600;\n}\n\n.close-view-details {\n    position: absolute;\n    font-size: 1.2rem;\n    right: 14px;\n    top: 14px;\n    cursor: pointer;\n}\n\n.view-details-content {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.view-detail{\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.view-detail-priority.high > :first-child {\n    color: var(--priority-high);\n}\n\n.view-detail-priority.medium > :first-child {\n    color: var(--priority-medium);\n}\n\n.view-detail-priority.low > :first-child {\n    color: var(--priority-low);\n}\n\n/* || CONTENTS */\n.contents {\n    height: 100%;\n    display: grid;\n    grid-template-columns: auto 3fr;\n    grid-template-rows: auto 1fr;\n    grid-template-areas: \n    "header header"\n    "nav main";\n}\n\na {\n    color: inherit;\n    text-decoration: none;\n    pointer-events: none;\n}\n\n/* || HEADER */\n.header {\n    grid-area: header;\n    color: white;\n    height: 50px;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 2rem;\n    background-color: var(--accent-color);\n}\n\n.header-nav {\n    display: flex;\n    gap: 0.625rem;\n}\n\n.header button {\n    color: white;\n    background: none;\n    height: 24px;\n    width: 24px;\n    border-radius: 5px;\n    font-size: 1.4rem;\n    cursor: pointer;\n}\n\n.header button:hover {\n    background: hsla(0,0%,100%,.2);\n}\n\n.header-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.625rem;\n}\n\n\n/* || TOGGLE DARK/LIGHT THEME */\n.toggle-theme input[type="checkbox"] {\nvisibility: hidden;\ndisplay: none;\n}\n\n.toggle-theme *,\n.toggle-theme ::after,\n.toggle-theme ::before {\nbox-sizing: border-box;\n}\n\n/* The switch - the box around the slider */\n.toggle-theme .switch {\n--width-of-switch: 2.5em;\n--height-of-switch: 1.3em;\n/* size of sliding icon -- sun and moon */\n--size-of-icon: 1em;\n/* it is like a inline-padding of switch */\n--slider-offset: 0.3em;\nposition: relative;\nwidth: var(--width-of-switch);\nheight: var(--height-of-switch);\ndisplay: inline-block;\n}\n\n/* The slider */\n.toggle-theme .slider {\nposition: absolute;\ncursor: pointer;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\n/* background-color: #f4f4f5; */\nbackground-color: var(--aside-color);\ntransition: .4s;\nborder-radius: 30px;\n}\n\n.toggle-theme .slider:before {\nposition: absolute;\ncontent: "";\nheight: var(--size-of-icon,1.4em);\nwidth: var(--size-of-icon,1.4em);\nborder-radius: 20px;\nleft: var(--slider-offset,0.3em);\ntop: 50%;\ntransform: translateY(-50%);\n/* background: linear-gradient(40deg,#ff0080,#ff8c00 70%); */\nbackground-color: var(--accent-color);\ntransition: .4s;\n}\n\n.toggle-theme input:checked + .slider {\n/* background-color: #303136; */\nbackground: var(--aside-color);\n}\n\n.toggle-theme input:checked + .slider:before {\nleft: calc(100% - (var(--size-of-icon,1.4em) + var(--slider-offset,0.3em)));\n/* background: #303136; */\nbackground: var(--aside-color);\n/* change the value of second inset in box-shadow to change the angle and direction of the moon  */\n/* box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb; */\nbox-shadow: inset -3px -2px 5px -2px var(--accent-color), inset -10px -4px 0 0 var(--accent-color);\n\n}\n\n\n/* || ASIDE */\nnav {\n    width: 250px;\n    grid-area: nav;\n    overflow: auto;\n    overflow-x: hidden;\n    /* transition: all 1s; */\n    transition: all .5s cubic-bezier(0.4, 0, 0.2, 1);\n    background-color: var(--aside-color);\n}\n\n\n.sidebar-content-nav {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 4rem 1rem 1rem;\n}\n\n.side-nav {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 5px;\n    border-radius: 8px;\n    cursor: pointer;\n}\n\n.side-nav:hover,\n.project-item:hover,\n.project-title-container:hover {\n    background-color: var(--aside-hover-color);\n}\n\n.sidebar-content-projects {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 0 1rem 0 1rem;\n}\n\n.project-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 8px;\n    padding: 0 5px;\n}\n\n.project-title-container .add-project {\n    cursor: pointer;\n    font-size: 1.4rem;\n}\n\n.project-title {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 1.2rem;\n}\n\n.project-item {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 5px 5px 5px 10px;\n    border-radius: 8px;\n    cursor: pointer;\n}\n\n.dot {\n    height: 13px;\n    width: 13px;\n    background-color: #b6b6b6;\n    border-radius: 50%;\n    flex-shrink: 0;\n}\n\n/* || MAIN */\n.main-container {\n    grid-area: main;\n    max-height: 100%;\n    max-width: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--main-color);\n    padding-bottom: 4rem;\n}\n\n.main h1 {\n    font-weight: 700;\n}\n\n.main .add-todo {\n    width: clamp(300px, 50%, 750px);\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    border-radius: 15px;\n    padding-left: 5px;\n}\n\n.add-todo-btn, .add-project{\n    color: var(--text-color);\n    margin-top: 7px;\n    background: none;\n    font-size: 2rem;\n    border-radius: 8px;\n    cursor: pointer;\n    transform: translateZ(0) scale(1);\n    transition: transform .2s;\n}\n\n\n.btn-simple-animation:not(:disabled):hover {\n    transform: scale(1.05);\n}\n\n.btn-simple-animation:not(:disabled):hover:active{\n    transform: scale(1.05) translateY(.125rem);\n}\n\n.add-todo:hover {\n    background-color: var(--todo-btn-hover);\n}\n\n\n.btn-simple-animation:focus {\n    outline: 0 solid transparent;\n}\n\n.btn-simple-animation:focus:before {\ncontent: "";\nleft: calc(-1*.375rem);\npointer-events: none;\nposition: absolute;\ntop: calc(-1*.375rem);\ntransition: border-radius;\nuser-select: none;\n}\n\n.btn-simple-animation:focus:not(:focus-visible) {\noutline: 0 solid transparent;\n}\n\n.btn-simple-animation:focus:not(:focus-visible):before {\nborder-width: 0;\n}\n\n.btn-simple-animation:not(:disabled):active {\ntransform: translateY(.125rem);\n}\n\n\n.todo-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    box-sizing: border-box;\n    padding: 4rem 0 0 2rem;\n}\n\n.todo-container h1 {\n    font-size: 2rem;\n}\n\n.todo-list {\n    max-width: 100%;\n    max-height: 37.5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    padding: 1rem;\n    overflow-y: auto;\n    overflow-x: hidden;\n    /* scrollbar-gutter: stable; */\n    /* scrollbar-color: #6969dd #e0e0e0;\n    scrollbar-width: thin; */\n\n}\n\n.todo-list::-webkit-scrollbar {\n    width: 5px;\n  }\n  \n  .todo-list::-webkit-scrollbar-track {\n    background-color: var(--main-color);\n    border-radius: 100px;\n  }\n  \n  .todo-list::-webkit-scrollbar-thumb {\n    background-color: var(--accent-color);\n    /* box-shadow: inset 0 0 6px var(--accent-color); */\n    border-radius: 100px;\n  }\n\n#default0 {\n    display: none;\n}\n\n.todo-wrapper {\n    width: clamp(400px, 50%, 750px);\n    padding: 1rem 1rem 1rem 1rem;\n    border-radius: 5px;\n    box-shadow: 2px 1px 2px rgb(var(--todo-hover), 0.15);\n    transition: all 0.3s ease-in-out;\n}\n\n.todo-wrapper.priority-low {\n    border-left: 3px solid var(--priority-low);\n}\n\n.todo-wrapper.priority-medium {\n    border-left: 3px solid var(--priority-medium);\n}\n\n.todo-wrapper.priority-high {\n    border-left: 3px solid var(--priority-high);\n}\n\n.todo-wrapper:after {\n    opacity: 0;\n    border-radius: 5px;\n    box-shadow: 0 5px 15px rgb(var(--todo-hover), 0.3);\n    transition: opacity 0.3s ease-in-out;\n}\n\n.todo-wrapper:hover {\n    transform: scale(1.02, 1.02);\n}\n\n/* Fade in the pseudo-element with the bigger shadow */\n.todo-wrapper:hover::after {\nopacity: 1;\n}\n\n.todo-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n.todo-item-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.todo-item-actions button {\n    color: var(--text-color);\n    background: none;\n    height: 19px;\n    width: 25px;\n    border-radius: 5px;\n    font-size: 1.1rem;\n    cursor: pointer;\n}\n\n.todo-item-actions button:hover {\n    background: var(--todo-btn-hover);\n}\n\n.todo-item-due-date {\n    font-weight: 500;\n    font-size: 0.8rem;\n}\n\n.todo-item-actions button.item-details {\n    font-size: 0.625rem;\n    font-weight: 700;\n    width: 45px;\n    border: 1px solid rgb(105, 105, 105);\n}\n\n.todo-item-actions button.item-details:hover {\n    background-color: var(--accent-color);\n    color: white;\n}\n\n.todo-item .cbx {\n-webkit-user-select: none;\nuser-select: none;\n-webkit-tap-highlight-color: transparent;\ncursor: pointer;\n}\n.todo-item .cbx span {\ndisplay: inline-block;\nvertical-align: middle;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child {\nposition: relative;\nwidth: 24px;\nheight: 24px;\nborder-radius: 50%;\ntransform: scale(1);\nvertical-align: middle;\nborder: 1px solid #B9B8C3;\ntransition: all 0.2s ease;\n}\n.todo-item .cbx span:first-child svg {\nposition: absolute;\nz-index: 1;\ntop: 8px;\nleft: 6px;\nfill: none;\nstroke: white;\nstroke-width: 2;\nstroke-linecap: round;\nstroke-linejoin: round;\nstroke-dasharray: 16px;\nstroke-dashoffset: 16px;\ntransition: all 0.3s ease;\ntransition-delay: 0.1s;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child:before {\ncontent: "";\nwidth: 100%;\nheight: 100%;\nbackground: #579BB1;\ndisplay: block;\ntransform: scale(0);\nopacity: 1;\nborder-radius: 50%;\ntransition-delay: 0.2s;\n}\n.todo-item .cbx span:last-child {\nmargin-left: 8px;\n}\n.todo-item .cbx span:last-child:after {\ncontent: "";\nposition: absolute;\ntop: 8px;\nleft: 0;\nheight: 1px;\nwidth: 100%;\nbackground: var(--todo-title-crossed-bg);\ntransform-origin: 0 0;\ntransform: scaleX(0);\n}\n.todo-item .cbx:hover span:first-child {\nborder-color: var(--accent-color);\n}\n\n.todo-item .inp-cbx:checked + .cbx span:first-child {\nborder-color: var(--accent-color);\nbackground: var(--accent-color);\nanimation: cbx-15 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child svg {\nstroke-dashoffset: 0;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child:before {\ntransform: scale(2.2);\nopacity: 0;\ntransition: all 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child {\ncolor: var(--todo-title-crossed-color);\ntransition: all 0.3s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child:after {\ntransform: scaleX(1);\ntransition: all 0.3s ease;\n}\n\n@keyframes cbx-15 {\n50% {\n    transform: scale(1.2);\n}\n}\n\n\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500;600;700&display=swap\');\n\n/* || GLOBAL STYLES */\n\n:root.light {\n    --accent-color: #03A696;\n    --aside-color: #e0ddd1;\n    --aside-hover-color: #dbd9cf;\n    --main-color: #ECE8DD;\n    --text-color: 0, 0, 0;\n    --todo-hover: 0, 0, 0;\n    --todo-btn-hover: #e0dcd1;\n    --priority-low: #36AE7C;\n    --priority-medium: #FF6E31;\n    --priority-high: #EB5353;\n    --todo-title-crossed-color: #bebec2;\n    --todo-title-crossed-bg: #b1b1bb;\n\n}\n:root,\n:root.dark {\n    --accent-color: #03A696;\n    --aside-color: #191919;\n    --aside-hover-color: #353535;\n    --main-color: #161616;\n    --text-color: 255, 255, 255;\n    --todo-hover: 153, 153, 153;\n    --todo-btn-hover: #252525;\n    --priority-low: #36AE7C;\n    --priority-medium: #FF6E31;\n    --priority-high: #EB5353;\n    --todo-title-crossed-color: #464646;\n    --todo-title-crossed-bg: #3d3d3d;\n}\n\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\n\nbody {\n    color: rgb(var(--text-color), 0.8);\n    width: 100vw;\n    height: 100vh;\n    font-family: \'Open Sans\', sans-serif;\n    overflow: hidden; \n}\n\n\n/* FORM OVERLAY FORM */\n\n.overlay-create-new,\n.overlay-edit,\n.overlay-view-details,\n.overlay-delete-item-dialogue,\n.overlay-add-new-project {\n    z-index: 2;\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 10px;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.6);\n    opacity: 0;\n    visibility: hidden;\n    /* display: none; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0.3s;\n    transition: opacity 0.3s 0s, visibility 0s 0.3s;\n}\n\n.is-visible {\n    opacity: 1;\n    visibility: visible;\n    /* display: flex; */\n    -webkit-transition: opacity 0.3s 0s, visibility 0s 0s;\n    -moz-transition: opacity 0.3s 0s, visibility 0s 0s;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n}\n\n.overlay-delete-item-dialogue {\n    text-align: center;\n}\n  \nform.create-new, \nform.edit, \n.view-details-container, \n.delete-dialogue-contents,\nform.add-new-project {\n\n    background-color: var(--aside-color);\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\n    box-sizing: border-box;\n    width: clamp(350px, 50%, 600px);\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    border-radius: 15px;\n    padding: 1rem;\n\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px);\n    /* Force Hardware Acceleration in WebKit */\n    -webkit-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -webkit-transition-property: -webkit-transform;\n    -moz-transition-property: -moz-transform;\n    transition-property: transform;\n    -webkit-transition-duration: 0.3s;\n    -moz-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n}\n\n.create-new-main, \n.edit-main {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.add-new-project-main {\n    display: flex;\n    flex-direction: column;\n    font-size: 1.2rem;\n}\n\n.create-new-main input,\n.edit-main input {\n    outline: none;\n    font-size: 0.8rem;\n    color: var(--text-color);\n    background-color: var(--aside-color);\n} \n\n.add-new-project input {\n    border: 1px solid rgb(131, 131, 131);\n    border-radius: 8px;\n    padding: 0.5rem;\n    font-size: 1.2rem;\n    color: var(--text-color);\n    background-color: var(--aside-color);\n    margin: 0.5rem 0 1rem 0;\n}\n\n.add-new-project input:focus {\n    outline: none;\n    border: 1px solid var(--accent-color);\n}\n\n.create-new-main input:nth-child(1), .edit-main input:nth-child(1) {\n    font-size: 1.2rem;\n    font-weight: 700;\n}\n\n.create-new-options, .edit-options {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n\n\n\n.priority {\n    height: 30px;\n    display: flex;\n    align-items: center;\n    gap: 0.8rem;\n}\n\n.priority-radios {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    /* cursor: pointer; */\n}\n\ninput[type="radio"] {\n    -webkit-appearance: none;\n    appearance: none;\n    /* For iOS < 15 to remove gradient background */\n    background-color: var(--main-color);\n    /* Not removed via appearance */\n    margin: 0;\n    font: inherit;\n    color: currentColor;\n    width: 1.15em;\n    height: 1.15em;\n    border: 0.15em solid currentColor;\n    border-radius: 50%;\n    display: grid;\n    place-content: center;\n    cursor: pointer;\n}\n\ninput[type="radio"]::before {\n    content: "";\n    width: 0.65em;\n    height: 0.65em;\n    border-radius: 50%;\n    transform: scale(0);\n    transition: 120ms transform ease-in-out;\n    box-shadow: inset 1em 1em var(--accent-color);\n}\n\ninput[type="radio"]:checked::before {\n    transform: scale(1);\n}\n\n\n\n#priority-low, #priority-low-edit {\n    border: 0.15em solid var(--priority-low);\n}\n\n#priority-low::before, #priority-low-edit::before {\n    box-shadow: inset 1em 1em var(--priority-low);\n}\n\n#priority-medium, #priority-medium-edit {\n    border: 0.15em solid var(--priority-medium);\n}\n\n#priority-medium::before, #priority-medium-edit::before {\n    box-shadow: inset 1em 1em var(--priority-medium);\n}\n\n#priority-high, #priority-high-edit {\n    border: 0.15em solid var(--priority-high);\n}\n\n#priority-high::before, #priority-high-edit::before {\n    box-shadow: inset 1em 1em var(--priority-high);\n}\n\n.create-new-options-main,\n.create-new-actions,\n.edit-options-main,\n.edit-actions {\n    display: flex;\n    gap: 0.8rem;\n}\n\n.create-new-options-main, .edit-options-main {\n    align-self: flex-end;\n} \n\n.create-new-options button,  \n.create-new-actions button,\n.edit-options button,  \n.edit-actions button {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 0.8rem;\n    padding: 0.4rem 0.6rem;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.delete-dialogue-options {\n    display: flex;\n    justify-content: center;\n    gap: 1rem;\n}\n\n.add-project-options  {\n    display: flex;\n    justify-content: flex-end;\n    gap: 1rem;\n}\n\n.dialogue-option,\n.add-project-option {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 0.8rem;\n    padding: 0.4rem 0.6rem;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n/* .due-date {\n    \n    gap: 5px;\n} */\n\n#new-due-date, #edit-due-date {\n    color: var(--text-color);\n    display: inline-flex;\n    align-items: flex-end;\n    font-size: 0.8rem;\n    outline: none;\n    background-color: transparent;\n    appearance: none;\n    text-transform: uppercase;\n    border: 1px solid var(--accent-color);\n    border-radius: 5px;\n    padding: 0.3rem 0.5rem;\n    user-select: none;\n}\n\ninput::-webkit-datetime-edit-day-field:focus,\ninput::-webkit-datetime-edit-month-field:focus,\ninput::-webkit-datetime-edit-year-field:focus {\n    background-color: var(--accent-color);\n    color: white;\n    outline: none;\n}\n\n.create-new-divider, .edit-divider {\n    width: 100%;\n    height: 1px;\n    background-color: #3b3b3b5b;\n}\n\n.create-new-actions, .edit-actions {\n    align-self: flex-end;\n    font-weight: 600;\n}\n\n.close-view-details {\n    position: absolute;\n    font-size: 1.2rem;\n    right: 14px;\n    top: 14px;\n    cursor: pointer;\n}\n\n.view-details-content {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n}\n\n.view-detail{\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.view-detail-priority.high > :first-child {\n    color: var(--priority-high);\n}\n\n.view-detail-priority.medium > :first-child {\n    color: var(--priority-medium);\n}\n\n.view-detail-priority.low > :first-child {\n    color: var(--priority-low);\n}\n\n/* || CONTENTS */\n.contents {\n    height: 100%;\n    display: grid;\n    grid-template-columns: auto 3fr;\n    grid-template-rows: auto 1fr;\n    grid-template-areas: \n    "header header"\n    "nav main";\n}\n\na {\n    color: inherit;\n    text-decoration: none;\n    pointer-events: none;\n}\n\n/* || HEADER */\n.header {\n    grid-area: header;\n    color: white;\n    height: 50px;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 2rem;\n    background-color: var(--accent-color);\n}\n\n.header-nav {\n    display: flex;\n    gap: 0.625rem;\n}\n\n.header button {\n    color: white;\n    background: none;\n    height: 24px;\n    width: 24px;\n    border-radius: 5px;\n    font-size: 1.4rem;\n    cursor: pointer;\n}\n\n.header button:hover {\n    background: hsla(0,0%,100%,.2);\n}\n\n.header-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.625rem;\n}\n\n\n/* || TOGGLE DARK/LIGHT THEME */\n.toggle-theme input[type="checkbox"] {\nvisibility: hidden;\ndisplay: none;\n}\n\n.toggle-theme *,\n.toggle-theme ::after,\n.toggle-theme ::before {\nbox-sizing: border-box;\n}\n\n/* The switch - the box around the slider */\n.toggle-theme .switch {\n--width-of-switch: 2.5em;\n--height-of-switch: 1.3em;\n/* size of sliding icon -- sun and moon */\n--size-of-icon: 1em;\n/* it is like a inline-padding of switch */\n--slider-offset: 0.3em;\nposition: relative;\nwidth: var(--width-of-switch);\nheight: var(--height-of-switch);\ndisplay: inline-block;\n}\n\n/* The slider */\n.toggle-theme .slider {\nposition: absolute;\ncursor: pointer;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\n/* background-color: #f4f4f5; */\nbackground-color: var(--aside-color);\ntransition: .4s;\nborder-radius: 30px;\n}\n\n.toggle-theme .slider:before {\nposition: absolute;\ncontent: "";\nheight: var(--size-of-icon,1.4em);\nwidth: var(--size-of-icon,1.4em);\nborder-radius: 20px;\nleft: var(--slider-offset,0.3em);\ntop: 50%;\ntransform: translateY(-50%);\n/* background: linear-gradient(40deg,#ff0080,#ff8c00 70%); */\nbackground-color: var(--accent-color);\ntransition: .4s;\n}\n\n.toggle-theme input:checked + .slider {\n/* background-color: #303136; */\nbackground: var(--aside-color);\n}\n\n.toggle-theme input:checked + .slider:before {\nleft: calc(100% - (var(--size-of-icon,1.4em) + var(--slider-offset,0.3em)));\n/* background: #303136; */\nbackground: var(--aside-color);\n/* change the value of second inset in box-shadow to change the angle and direction of the moon  */\n/* box-shadow: inset -3px -2px 5px -2px #8983f7, inset -10px -4px 0 0 #a3dafb; */\nbox-shadow: inset -3px -2px 5px -2px var(--accent-color), inset -10px -4px 0 0 var(--accent-color);\n\n}\n\n\n/* || ASIDE */\nnav {\n    width: 250px;\n    grid-area: nav;\n    overflow: auto;\n    overflow-x: hidden;\n    /* transition: all 1s; */\n    transition: all .5s cubic-bezier(0.4, 0, 0.2, 1);\n    background-color: var(--aside-color);\n}\n\n\n.sidebar-content-nav {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 4rem 1rem 1rem;\n}\n\n.side-nav {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    font-size: 1.3rem;\n    padding: 5px;\n    border-radius: 8px;\n    cursor: pointer;\n}\n\n.side-nav:hover,\n.project-item:hover,\n.project-title-container:hover {\n    background-color: var(--aside-hover-color);\n}\n\n.sidebar-content-projects {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 0 1rem 0 1rem;\n}\n\n.project-title-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: 8px;\n    padding: 0 5px;\n}\n\n.project-title-container .add-project {\n    cursor: pointer;\n    font-size: 1.4rem;\n}\n\n.project-title {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 1.2rem;\n}\n\n.project-item {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 5px 5px 5px 10px;\n    border-radius: 8px;\n    cursor: pointer;\n}\n\n.dot {\n    height: 13px;\n    width: 13px;\n    background-color: #b6b6b6;\n    border-radius: 50%;\n    flex-shrink: 0;\n}\n\n/* || MAIN */\n.main-container {\n    grid-area: main;\n    max-height: 100%;\n    max-width: 100%;\n    overflow-x: hidden;\n    overflow-y: hidden;\n    display: flex;\n    flex-direction: column;\n    background-color: var(--main-color);\n    padding-bottom: 4rem;\n}\n\n.main h1 {\n    font-weight: 700;\n}\n\n.main .add-todo {\n    width: clamp(300px, 50%, 750px);\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    border-radius: 15px;\n    padding-left: 5px;\n}\n\n.add-todo-btn, .add-project{\n    color: var(--text-color);\n    margin-top: 7px;\n    background: none;\n    font-size: 2rem;\n    border-radius: 8px;\n    cursor: pointer;\n    transform: translateZ(0) scale(1);\n    transition: transform .2s;\n}\n\n\n.btn-simple-animation:not(:disabled):hover {\n    transform: scale(1.05);\n}\n\n.btn-simple-animation:not(:disabled):hover:active{\n    transform: scale(1.05) translateY(.125rem);\n}\n\n.add-todo:hover {\n    background-color: var(--todo-btn-hover);\n}\n\n\n.btn-simple-animation:focus {\n    outline: 0 solid transparent;\n}\n\n.btn-simple-animation:focus:before {\ncontent: "";\nleft: calc(-1*.375rem);\npointer-events: none;\nposition: absolute;\ntop: calc(-1*.375rem);\ntransition: border-radius;\nuser-select: none;\n}\n\n.btn-simple-animation:focus:not(:focus-visible) {\noutline: 0 solid transparent;\n}\n\n.btn-simple-animation:focus:not(:focus-visible):before {\nborder-width: 0;\n}\n\n.btn-simple-animation:not(:disabled):active {\ntransform: translateY(.125rem);\n}\n\n\n.todo-container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    box-sizing: border-box;\n    padding: 4rem 0 0 2rem;\n}\n\n.todo-container h1 {\n    font-size: 2rem;\n}\n\n.todo-list {\n    max-width: 100%;\n    max-height: 37.5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    padding: 1rem;\n    overflow-y: auto;\n    overflow-x: hidden;\n    /* scrollbar-gutter: stable; */\n    /* scrollbar-color: #6969dd #e0e0e0;\n    scrollbar-width: thin; */\n\n}\n\n.todo-list::-webkit-scrollbar {\n    width: 5px;\n  }\n  \n  .todo-list::-webkit-scrollbar-track {\n    background-color: var(--main-color);\n    border-radius: 100px;\n  }\n  \n  .todo-list::-webkit-scrollbar-thumb {\n    background-color: var(--accent-color);\n    /* box-shadow: inset 0 0 6px var(--accent-color); */\n    border-radius: 100px;\n  }\n\n#default0 {\n    display: none;\n}\n\n.todo-wrapper {\n    width: clamp(400px, 50%, 750px);\n    padding: 1rem 1rem 1rem 1rem;\n    border-radius: 5px;\n    box-shadow: 2px 1px 2px rgb(var(--todo-hover), 0.15);\n    transition: all 0.3s ease-in-out;\n}\n\n.todo-wrapper.priority-low {\n    border-left: 3px solid var(--priority-low);\n}\n\n.todo-wrapper.priority-medium {\n    border-left: 3px solid var(--priority-medium);\n}\n\n.todo-wrapper.priority-high {\n    border-left: 3px solid var(--priority-high);\n}\n\n.todo-wrapper:after {\n    opacity: 0;\n    border-radius: 5px;\n    box-shadow: 0 5px 15px rgb(var(--todo-hover), 0.3);\n    transition: opacity 0.3s ease-in-out;\n}\n\n.todo-wrapper:hover {\n    transform: scale(1.02, 1.02);\n}\n\n/* Fade in the pseudo-element with the bigger shadow */\n.todo-wrapper:hover::after {\nopacity: 1;\n}\n\n.todo-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n.todo-item-actions {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.todo-item-actions button {\n    color: var(--text-color);\n    background: none;\n    height: 19px;\n    width: 25px;\n    border-radius: 5px;\n    font-size: 1.1rem;\n    cursor: pointer;\n}\n\n.todo-item-actions button:hover {\n    background: var(--todo-btn-hover);\n}\n\n.todo-item-due-date {\n    font-weight: 500;\n    font-size: 0.8rem;\n}\n\n.todo-item-actions button.item-details {\n    font-size: 0.625rem;\n    font-weight: 700;\n    width: 45px;\n    border: 1px solid rgb(105, 105, 105);\n}\n\n.todo-item-actions button.item-details:hover {\n    background-color: var(--accent-color);\n    color: white;\n}\n\n.todo-item .cbx {\n-webkit-user-select: none;\nuser-select: none;\n-webkit-tap-highlight-color: transparent;\ncursor: pointer;\n}\n.todo-item .cbx span {\ndisplay: inline-block;\nvertical-align: middle;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child {\nposition: relative;\nwidth: 24px;\nheight: 24px;\nborder-radius: 50%;\ntransform: scale(1);\nvertical-align: middle;\nborder: 1px solid #B9B8C3;\ntransition: all 0.2s ease;\n}\n.todo-item .cbx span:first-child svg {\nposition: absolute;\nz-index: 1;\ntop: 8px;\nleft: 6px;\nfill: none;\nstroke: white;\nstroke-width: 2;\nstroke-linecap: round;\nstroke-linejoin: round;\nstroke-dasharray: 16px;\nstroke-dashoffset: 16px;\ntransition: all 0.3s ease;\ntransition-delay: 0.1s;\ntransform: translate3d(0, 0, 0);\n}\n.todo-item .cbx span:first-child:before {\ncontent: "";\nwidth: 100%;\nheight: 100%;\nbackground: #579BB1;\ndisplay: block;\ntransform: scale(0);\nopacity: 1;\nborder-radius: 50%;\ntransition-delay: 0.2s;\n}\n.todo-item .cbx span:last-child {\nmargin-left: 8px;\n}\n.todo-item .cbx span:last-child:after {\ncontent: "";\nposition: absolute;\ntop: 8px;\nleft: 0;\nheight: 1px;\nwidth: 100%;\nbackground: var(--todo-title-crossed-bg);\ntransform-origin: 0 0;\ntransform: scaleX(0);\n}\n.todo-item .cbx:hover span:first-child {\nborder-color: var(--accent-color);\n}\n\n.todo-item .inp-cbx:checked + .cbx span:first-child {\nborder-color: var(--accent-color);\nbackground: var(--accent-color);\nanimation: cbx-15 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child svg {\nstroke-dashoffset: 0;\n}\n.todo-item .inp-cbx:checked + .cbx span:first-child:before {\ntransform: scale(2.2);\nopacity: 0;\ntransition: all 0.6s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child {\ncolor: var(--todo-title-crossed-color);\ntransition: all 0.3s ease;\n}\n.todo-item .inp-cbx:checked + .cbx span:last-child:after {\ntransform: scaleX(1);\ntransition: all 0.3s ease;\n}\n\n@keyframes cbx-15 {\n50% {\n    transform: scale(1.2);\n}\n}\n\n\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],d=r.base?s[0]+r.base:s[0],l=i[d]||0,c="".concat(d," ").concat(l);i[d]=l+1;var u=t(c),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var p=o(m,r);r.byIndex=A,e.splice(A,0,{identifier:c,updater:p,references:1})}a.push(c)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var s=r(n,o),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),s=t.n(A),d=t(216),l=t.n(d),c=t(589),u=t.n(c),m=t(426),p={};function C(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function h(n){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},h(n)}function f(n){return C(1,arguments),n instanceof Date||"object"===h(n)&&"[object Date]"===Object.prototype.toString.call(n)}function g(n){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},g(n)}function b(n){C(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"===g(n)&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function B(n){if(C(1,arguments),!f(n)&&"number"!=typeof n)return!1;var e=b(n);return!isNaN(Number(e))}function v(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function y(n,e){C(2,arguments);var t=b(n).getTime(),r=v(e);return new Date(t+r)}function w(n,e){C(2,arguments);var t=v(e);return y(n,-t)}p.styleTagTransform=u(),p.setAttributes=s(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=l(),e()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;var x=864e5;function I(n){C(1,arguments);var e=1,t=b(n),r=t.getUTCDay(),o=(r<e?7:0)+r-e;return t.setUTCDate(t.getUTCDate()-o),t.setUTCHours(0,0,0,0),t}function k(n){C(1,arguments);var e=b(n),t=e.getUTCFullYear(),r=new Date(0);r.setUTCFullYear(t+1,0,4),r.setUTCHours(0,0,0,0);var o=I(r),i=new Date(0);i.setUTCFullYear(t,0,4),i.setUTCHours(0,0,0,0);var a=I(i);return e.getTime()>=o.getTime()?t+1:e.getTime()>=a.getTime()?t:t-1}function E(n){C(1,arguments);var e=k(n),t=new Date(0);t.setUTCFullYear(e,0,4),t.setUTCHours(0,0,0,0);var r=I(t);return r}var T=6048e5,S={};function D(){return S}function j(n,e){var t,r,o,i,a,A,s,d;C(1,arguments);var l=D(),c=v(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.weekStartsOn)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(A=a.options)||void 0===A?void 0:A.weekStartsOn)&&void 0!==o?o:l.weekStartsOn)&&void 0!==r?r:null===(s=l.locale)||void 0===s||null===(d=s.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==t?t:0);if(!(c>=0&&c<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var u=b(n),m=u.getUTCDay(),p=(m<c?7:0)+m-c;return u.setUTCDate(u.getUTCDate()-p),u.setUTCHours(0,0,0,0),u}function q(n,e){var t,r,o,i,a,A,s,d;C(1,arguments);var l=b(n),c=l.getUTCFullYear(),u=D(),m=v(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.firstWeekContainsDate)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(A=a.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==o?o:u.firstWeekContainsDate)&&void 0!==r?r:null===(s=u.locale)||void 0===s||null===(d=s.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==t?t:1);if(!(m>=1&&m<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var p=new Date(0);p.setUTCFullYear(c+1,0,m),p.setUTCHours(0,0,0,0);var h=j(p,e),f=new Date(0);f.setUTCFullYear(c,0,m),f.setUTCHours(0,0,0,0);var g=j(f,e);return l.getTime()>=h.getTime()?c+1:l.getTime()>=g.getTime()?c:c-1}function z(n,e){var t,r,o,i,a,A,s,d;C(1,arguments);var l=D(),c=v(null!==(t=null!==(r=null!==(o=null!==(i=null==e?void 0:e.firstWeekContainsDate)&&void 0!==i?i:null==e||null===(a=e.locale)||void 0===a||null===(A=a.options)||void 0===A?void 0:A.firstWeekContainsDate)&&void 0!==o?o:l.firstWeekContainsDate)&&void 0!==r?r:null===(s=l.locale)||void 0===s||null===(d=s.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==t?t:1),u=q(n,e),m=new Date(0);m.setUTCFullYear(u,0,c),m.setUTCHours(0,0,0,0);var p=j(m,e);return p}var M=6048e5;function Y(n,e){for(var t=n<0?"-":"",r=Math.abs(n).toString();r.length<e;)r="0"+r;return t+r}const W=function(n,e){var t=n.getUTCFullYear(),r=t>0?t:1-t;return Y("yy"===e?r%100:r,e.length)},L=function(n,e){var t=n.getUTCMonth();return"M"===e?String(t+1):Y(t+1,2)},U=function(n,e){return Y(n.getUTCDate(),e.length)},P=function(n,e){return Y(n.getUTCHours()%12||12,e.length)},O=function(n,e){return Y(n.getUTCHours(),e.length)},N=function(n,e){return Y(n.getUTCMinutes(),e.length)},F=function(n,e){return Y(n.getUTCSeconds(),e.length)},G=function(n,e){var t=e.length,r=n.getUTCMilliseconds();return Y(Math.floor(r*Math.pow(10,t-3)),e.length)};var R={G:function(n,e,t){var r=n.getUTCFullYear()>0?1:0;switch(e){case"G":case"GG":case"GGG":return t.era(r,{width:"abbreviated"});case"GGGGG":return t.era(r,{width:"narrow"});default:return t.era(r,{width:"wide"})}},y:function(n,e,t){if("yo"===e){var r=n.getUTCFullYear(),o=r>0?r:1-r;return t.ordinalNumber(o,{unit:"year"})}return W(n,e)},Y:function(n,e,t,r){var o=q(n,r),i=o>0?o:1-o;return"YY"===e?Y(i%100,2):"Yo"===e?t.ordinalNumber(i,{unit:"year"}):Y(i,e.length)},R:function(n,e){return Y(k(n),e.length)},u:function(n,e){return Y(n.getUTCFullYear(),e.length)},Q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"Q":return String(r);case"QQ":return Y(r,2);case"Qo":return t.ordinalNumber(r,{unit:"quarter"});case"QQQ":return t.quarter(r,{width:"abbreviated",context:"formatting"});case"QQQQQ":return t.quarter(r,{width:"narrow",context:"formatting"});default:return t.quarter(r,{width:"wide",context:"formatting"})}},q:function(n,e,t){var r=Math.ceil((n.getUTCMonth()+1)/3);switch(e){case"q":return String(r);case"qq":return Y(r,2);case"qo":return t.ordinalNumber(r,{unit:"quarter"});case"qqq":return t.quarter(r,{width:"abbreviated",context:"standalone"});case"qqqqq":return t.quarter(r,{width:"narrow",context:"standalone"});default:return t.quarter(r,{width:"wide",context:"standalone"})}},M:function(n,e,t){var r=n.getUTCMonth();switch(e){case"M":case"MM":return L(n,e);case"Mo":return t.ordinalNumber(r+1,{unit:"month"});case"MMM":return t.month(r,{width:"abbreviated",context:"formatting"});case"MMMMM":return t.month(r,{width:"narrow",context:"formatting"});default:return t.month(r,{width:"wide",context:"formatting"})}},L:function(n,e,t){var r=n.getUTCMonth();switch(e){case"L":return String(r+1);case"LL":return Y(r+1,2);case"Lo":return t.ordinalNumber(r+1,{unit:"month"});case"LLL":return t.month(r,{width:"abbreviated",context:"standalone"});case"LLLLL":return t.month(r,{width:"narrow",context:"standalone"});default:return t.month(r,{width:"wide",context:"standalone"})}},w:function(n,e,t,r){var o=function(n,e){C(1,arguments);var t=b(n),r=j(t,e).getTime()-z(t,e).getTime();return Math.round(r/M)+1}(n,r);return"wo"===e?t.ordinalNumber(o,{unit:"week"}):Y(o,e.length)},I:function(n,e,t){var r=function(n){C(1,arguments);var e=b(n),t=I(e).getTime()-E(e).getTime();return Math.round(t/T)+1}(n);return"Io"===e?t.ordinalNumber(r,{unit:"week"}):Y(r,e.length)},d:function(n,e,t){return"do"===e?t.ordinalNumber(n.getUTCDate(),{unit:"date"}):U(n,e)},D:function(n,e,t){var r=function(n){C(1,arguments);var e=b(n),t=e.getTime();e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0);var r=e.getTime(),o=t-r;return Math.floor(o/x)+1}(n);return"Do"===e?t.ordinalNumber(r,{unit:"dayOfYear"}):Y(r,e.length)},E:function(n,e,t){var r=n.getUTCDay();switch(e){case"E":case"EE":case"EEE":return t.day(r,{width:"abbreviated",context:"formatting"});case"EEEEE":return t.day(r,{width:"narrow",context:"formatting"});case"EEEEEE":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},e:function(n,e,t,r){var o=n.getUTCDay(),i=(o-r.weekStartsOn+8)%7||7;switch(e){case"e":return String(i);case"ee":return Y(i,2);case"eo":return t.ordinalNumber(i,{unit:"day"});case"eee":return t.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return t.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return t.day(o,{width:"short",context:"formatting"});default:return t.day(o,{width:"wide",context:"formatting"})}},c:function(n,e,t,r){var o=n.getUTCDay(),i=(o-r.weekStartsOn+8)%7||7;switch(e){case"c":return String(i);case"cc":return Y(i,e.length);case"co":return t.ordinalNumber(i,{unit:"day"});case"ccc":return t.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return t.day(o,{width:"narrow",context:"standalone"});case"cccccc":return t.day(o,{width:"short",context:"standalone"});default:return t.day(o,{width:"wide",context:"standalone"})}},i:function(n,e,t){var r=n.getUTCDay(),o=0===r?7:r;switch(e){case"i":return String(o);case"ii":return Y(o,e.length);case"io":return t.ordinalNumber(o,{unit:"day"});case"iii":return t.day(r,{width:"abbreviated",context:"formatting"});case"iiiii":return t.day(r,{width:"narrow",context:"formatting"});case"iiiiii":return t.day(r,{width:"short",context:"formatting"});default:return t.day(r,{width:"wide",context:"formatting"})}},a:function(n,e,t){var r=n.getUTCHours()/12>=1?"pm":"am";switch(e){case"a":case"aa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"aaa":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},b:function(n,e,t){var r,o=n.getUTCHours();switch(r=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",e){case"b":case"bb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"bbb":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},B:function(n,e,t){var r,o=n.getUTCHours();switch(r=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",e){case"B":case"BB":case"BBB":return t.dayPeriod(r,{width:"abbreviated",context:"formatting"});case"BBBBB":return t.dayPeriod(r,{width:"narrow",context:"formatting"});default:return t.dayPeriod(r,{width:"wide",context:"formatting"})}},h:function(n,e,t){if("ho"===e){var r=n.getUTCHours()%12;return 0===r&&(r=12),t.ordinalNumber(r,{unit:"hour"})}return P(n,e)},H:function(n,e,t){return"Ho"===e?t.ordinalNumber(n.getUTCHours(),{unit:"hour"}):O(n,e)},K:function(n,e,t){var r=n.getUTCHours()%12;return"Ko"===e?t.ordinalNumber(r,{unit:"hour"}):Y(r,e.length)},k:function(n,e,t){var r=n.getUTCHours();return 0===r&&(r=24),"ko"===e?t.ordinalNumber(r,{unit:"hour"}):Y(r,e.length)},m:function(n,e,t){return"mo"===e?t.ordinalNumber(n.getUTCMinutes(),{unit:"minute"}):N(n,e)},s:function(n,e,t){return"so"===e?t.ordinalNumber(n.getUTCSeconds(),{unit:"second"}):F(n,e)},S:function(n,e){return G(n,e)},X:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();if(0===o)return"Z";switch(e){case"X":return H(o);case"XXXX":case"XX":return Q(o);default:return Q(o,":")}},x:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"x":return H(o);case"xxxx":case"xx":return Q(o);default:return Q(o,":")}},O:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"O":case"OO":case"OOO":return"GMT"+X(o,":");default:return"GMT"+Q(o,":")}},z:function(n,e,t,r){var o=(r._originalDate||n).getTimezoneOffset();switch(e){case"z":case"zz":case"zzz":return"GMT"+X(o,":");default:return"GMT"+Q(o,":")}},t:function(n,e,t,r){var o=r._originalDate||n;return Y(Math.floor(o.getTime()/1e3),e.length)},T:function(n,e,t,r){return Y((r._originalDate||n).getTime(),e.length)}};function X(n,e){var t=n>0?"-":"+",r=Math.abs(n),o=Math.floor(r/60),i=r%60;if(0===i)return t+String(o);var a=e||"";return t+String(o)+a+Y(i,2)}function H(n,e){return n%60==0?(n>0?"-":"+")+Y(Math.abs(n)/60,2):Q(n,e)}function Q(n,e){var t=e||"",r=n>0?"-":"+",o=Math.abs(n);return r+Y(Math.floor(o/60),2)+t+Y(o%60,2)}const Z=R;var V=function(n,e){switch(n){case"P":return e.date({width:"short"});case"PP":return e.date({width:"medium"});case"PPP":return e.date({width:"long"});default:return e.date({width:"full"})}},J=function(n,e){switch(n){case"p":return e.time({width:"short"});case"pp":return e.time({width:"medium"});case"ppp":return e.time({width:"long"});default:return e.time({width:"full"})}};const $={p:J,P:function(n,e){var t,r=n.match(/(P+)(p+)?/)||[],o=r[1],i=r[2];if(!i)return V(n,e);switch(o){case"P":t=e.dateTime({width:"short"});break;case"PP":t=e.dateTime({width:"medium"});break;case"PPP":t=e.dateTime({width:"long"});break;default:t=e.dateTime({width:"full"})}return t.replace("{{date}}",V(o,e)).replace("{{time}}",J(i,e))}};function _(n){var e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),n.getTime()-e.getTime()}var K=["D","DD"],nn=["YY","YYYY"];function en(n){return-1!==K.indexOf(n)}function tn(n){return-1!==nn.indexOf(n)}function rn(n,e,t){if("YYYY"===n)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===n)throw new RangeError("Use `yy` instead of `YY` (in `".concat(e,"`) for formatting years to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===n)throw new RangeError("Use `d` instead of `D` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===n)throw new RangeError("Use `dd` instead of `DD` (in `".concat(e,"`) for formatting days of the month to the input `").concat(t,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var on={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function an(n){return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.width?String(e.width):n.defaultWidth,r=n.formats[t]||n.formats[n.defaultWidth];return r}}const An={date:an({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:an({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:an({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var sn={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function dn(n){return function(e,t){var r;if("formatting"===(null!=t&&t.context?String(t.context):"standalone")&&n.formattingValues){var o=n.defaultFormattingWidth||n.defaultWidth,i=null!=t&&t.width?String(t.width):o;r=n.formattingValues[i]||n.formattingValues[o]}else{var a=n.defaultWidth,A=null!=t&&t.width?String(t.width):n.defaultWidth;r=n.values[A]||n.values[a]}return r[n.argumentCallback?n.argumentCallback(e):e]}}const ln={ordinalNumber:function(n,e){var t=Number(n),r=t%100;if(r>20||r<10)switch(r%10){case 1:return t+"st";case 2:return t+"nd";case 3:return t+"rd"}return t+"th"},era:dn({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:dn({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(n){return n-1}}),month:dn({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:dn({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:dn({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function cn(n){return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.width,o=r&&n.matchPatterns[r]||n.matchPatterns[n.defaultMatchWidth],i=e.match(o);if(!i)return null;var a,A=i[0],s=r&&n.parsePatterns[r]||n.parsePatterns[n.defaultParseWidth],d=Array.isArray(s)?mn(s,(function(n){return n.test(A)})):un(s,(function(n){return n.test(A)}));a=n.valueCallback?n.valueCallback(d):d,a=t.valueCallback?t.valueCallback(a):a;var l=e.slice(A.length);return{value:a,rest:l}}}function un(n,e){for(var t in n)if(n.hasOwnProperty(t)&&e(n[t]))return t}function mn(n,e){for(var t=0;t<n.length;t++)if(e(n[t]))return t}var pn,Cn={ordinalNumber:(pn={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(n){return parseInt(n,10)}},function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.match(pn.matchPattern);if(!t)return null;var r=t[0],o=n.match(pn.parsePattern);if(!o)return null;var i=pn.valueCallback?pn.valueCallback(o[0]):o[0];i=e.valueCallback?e.valueCallback(i):i;var a=n.slice(r.length);return{value:i,rest:a}}),era:cn({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:cn({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(n){return n+1}}),month:cn({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:cn({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:cn({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const hn={code:"en-US",formatDistance:function(n,e,t){var r,o=on[n];return r="string"==typeof o?o:1===e?o.one:o.other.replace("{{count}}",e.toString()),null!=t&&t.addSuffix?t.comparison&&t.comparison>0?"in "+r:r+" ago":r},formatLong:An,formatRelative:function(n,e,t,r){return sn[n]},localize:ln,match:Cn,options:{weekStartsOn:0,firstWeekContainsDate:1}};var fn=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,gn=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,bn=/^'([^]*?)'?$/,Bn=/''/g,vn=/[a-zA-Z]/;function yn(n,e,t){var r,o,i,a,A,s,d,l,c,u,m,p,h,f,g,y,x,I;C(2,arguments);var k=String(e),E=D(),T=null!==(r=null!==(o=null==t?void 0:t.locale)&&void 0!==o?o:E.locale)&&void 0!==r?r:hn,S=v(null!==(i=null!==(a=null!==(A=null!==(s=null==t?void 0:t.firstWeekContainsDate)&&void 0!==s?s:null==t||null===(d=t.locale)||void 0===d||null===(l=d.options)||void 0===l?void 0:l.firstWeekContainsDate)&&void 0!==A?A:E.firstWeekContainsDate)&&void 0!==a?a:null===(c=E.locale)||void 0===c||null===(u=c.options)||void 0===u?void 0:u.firstWeekContainsDate)&&void 0!==i?i:1);if(!(S>=1&&S<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var j=v(null!==(m=null!==(p=null!==(h=null!==(f=null==t?void 0:t.weekStartsOn)&&void 0!==f?f:null==t||null===(g=t.locale)||void 0===g||null===(y=g.options)||void 0===y?void 0:y.weekStartsOn)&&void 0!==h?h:E.weekStartsOn)&&void 0!==p?p:null===(x=E.locale)||void 0===x||null===(I=x.options)||void 0===I?void 0:I.weekStartsOn)&&void 0!==m?m:0);if(!(j>=0&&j<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!T.localize)throw new RangeError("locale must contain localize property");if(!T.formatLong)throw new RangeError("locale must contain formatLong property");var q=b(n);if(!B(q))throw new RangeError("Invalid time value");var z=_(q),M=w(q,z),Y={firstWeekContainsDate:S,weekStartsOn:j,locale:T,_originalDate:q},W=k.match(gn).map((function(n){var e=n[0];return"p"===e||"P"===e?(0,$[e])(n,T.formatLong):n})).join("").match(fn).map((function(r){if("''"===r)return"'";var o=r[0];if("'"===o)return wn(r);var i=Z[o];if(i)return null!=t&&t.useAdditionalWeekYearTokens||!tn(r)||rn(r,e,String(n)),null!=t&&t.useAdditionalDayOfYearTokens||!en(r)||rn(r,e,String(n)),i(M,r,T.localize,Y);if(o.match(vn))throw new RangeError("Format string contains an unescaped latin alphabet character `"+o+"`");return r})).join("");return W}function wn(n){var e=n.match(bn);return e?e[1].replace(Bn,"'"):n}const xn=document.getElementById("default0"),In=(n,e,t,r,o,i,a)=>{const A=document.querySelector(".todo-list"),s=xn.cloneNode(!0),d=s.firstElementChild.firstElementChild.lastElementChild.lastElementChild,l=s.firstElementChild.firstElementChild.firstElementChild,c=s.firstElementChild.firstElementChild.lastElementChild,u=s.firstElementChild.lastElementChild.children,m=u[1],p=u[0],C=u[3],h=u[2];let f=Hn.getDefaultTaskList();r=f.find((e=>e.id===n)).priority,En(s,r),s.dataset.task="todo"+n,s.id="todo"+n,Number(s.id.at(-1)),c.htmlFor="cbx"+n,l.id="cbx"+n,(a=f.find((e=>e.id===n)).completed)?l.checked=!0:a||(l.checked=!1);let g=f.find((e=>e.id===n));l.addEventListener("click",(n=>{l.checked?(g.completed=!0,console.log(f)):(g.completed=!1,console.log("change"),console.log(f))})),d.innerText=e;let b=kn(o);p.innerText=b;let B=Hn.getDefaultTaskList().find((e=>e.id===n)).desc;return m.addEventListener("click",(e=>{Sn.editItem(e,n,d.innerText,B,r,o)})),C.addEventListener("click",(e=>{Sn.viewDetails(e,n)})),h.addEventListener("click",(e=>{Sn.openDeleteItemDialogue(n)})),A.appendChild(s),s},kn=n=>yn(new Date(n),"MMM do"),En=(n,e,t,r,o)=>{t&&r&&o||(t="priority-high",r="priority-medium",o="priority-low"),"priority-medium"===e?(n.classList.remove(o),n.classList.remove(t),n.classList.add(r)):"priority-low"===e?(n.classList.remove(r),n.classList.remove(t),n.classList.add(o)):"priority-high"===e&&(n.classList.remove(r),n.classList.remove(o),n.classList.add(t))},Tn=document.querySelectorAll('input[name="radio"]'),Sn=(()=>{const n=document.querySelector(".overlay-create-new"),e=document.querySelector(".overlay-edit"),t=document.querySelector(".create-new"),r=document.querySelector('form[class="edit"]'),o=document.querySelector(".add-todo-btn"),i=document.querySelectorAll(".cancel-form-btn"),a=(document.querySelector('button[class="form-btn add-task"]'),document.querySelector(".priority-radios"),document.querySelectorAll(".close-view-details")),A=document.querySelector('input[id="name"]'),s=document.querySelector('input[id="description"]'),d=document.querySelector("#new-due-date"),l=document.querySelector('input[id="name-edit"]'),c=document.querySelector('input[id="description-edit"]'),u=document.querySelector("#edit-due-date"),m=document.querySelectorAll('input[name="radio-edit"]'),p=document.querySelector(".overlay-view-details"),h=document.querySelector(".view-title"),f=document.querySelector(".view-desc"),g=document.querySelector(".view-priority"),B=document.querySelector(".view-due-date"),v=document.querySelector(".view-date-created"),y=document.querySelector(".view-detail-priority"),w=document.querySelector(".cancel-dialogue-option"),x=document.querySelector(".delete-dialogue-option"),I=document.querySelector(".overlay-delete-item-dialogue"),k=document.querySelector(".overlay-add-new-project"),E=document.querySelector(".cancel-project-btn"),T=document.querySelector(".add-project"),S=document.querySelector(".add-new-project"),D=document.querySelector('input[id="new-project-name"]'),j=()=>{n.classList.remove("is-visible"),t.reset()},q=()=>{e.classList.remove("is-visible"),r.reset()},z=()=>{I.classList.remove("is-visible")},M=()=>{k.classList.remove("is-visible"),S.reset()};let Y,W,L;const U=n=>("priority-low"===n?m[0].checked=!0:"priority-medium"===n?m[1].checked=!0:"priority-high"===n&&(m[2].checked=!0),n),P=n=>{let e;return[...n].forEach((n=>{n.checked&&("priority-low"===n.id||"priority-low-edit"===n.id?e="priority-low":"priority-medium"===n.id||"priority-medium-edit"===n.id?e="priority-medium":"priority-high"!==n.id&&"priority-high-edit"!==n.id||(e="priority-high"))})),e};P(Tn),o.addEventListener("click",(e=>{n.classList.add("is-visible"),O()})),T.addEventListener("click",(n=>{k.classList.add("is-visible"),D.focus()})),w.addEventListener("click",(n=>{z()})),x.addEventListener("click",(n=>{(n=>{n=L;let e=Hn.getDefaultTaskList(),t=e.indexOf(e.find((e=>e.id===n)));Hn.removeTask(t),document.getElementById(`todo${n}`).remove(),console.log(Hn.getDefaultTaskList()),z()})()})),E.addEventListener("click",(n=>{M()})),Array.from(i).forEach((n=>{n.addEventListener("click",(n=>{j(),q()}))})),Array.from(a).forEach((n=>{n.addEventListener("click",(n=>{p.classList.remove("is-visible")}))}));const O=()=>{const n=new Date;return console.log(n),n},N=n=>{let e;if(n){const t=yn(n,"d");e=`${yn(n,"MMMM")} ${t} ${yn(n,"yyyy")} at ${function(n){return C(1,arguments),b(n).getHours()}(n)}:${yn(n,"mm")}${yn(n,"aaa")}`,console.log(e)}else e=void 0;return e};return t.addEventListener("submit",(n=>{n.preventDefault(),(()=>{let n=A.value,e=s.value,t=d.value,r=P(Tn);n&&Qn(void 0,n,e,r,t)})(),j()})),r.addEventListener("submit",(n=>{n.preventDefault(),(n=>{n=Y;let e=Hn.getDefaultTaskList().find((e=>e.id===n)),t=document.getElementById(`todo${n}`),r=t.firstElementChild.firstElementChild.lastElementChild.lastElementChild,o=t.firstElementChild.lastElementChild.firstElementChild;e.title=l.value,e.dueDate=u.value;let i=kn(e.dueDate);o.innerText=i,r.innerText=e.title,e.desc=c.value,e.priority=P(m),En(t,e.priority),console.log(Hn.getDefaultTaskList())})(),q()})),S.addEventListener("submit",(n=>{n.preventDefault(),(n=>{const e=document.querySelector(".project-items");let t=document.createElement("div"),r=document.createElement("div"),o=document.createElement("a");t.classList.add("project-item"),r.classList.add("dot"),o.href="",o.innerText=n,t.append(r,o),e.appendChild(t)})(D.value),M()})),{setPriority:P,editItem:(n,t,r,o,i,a)=>{Y=t,console.log(Y),((n,e,t,r,o,i)=>{let a=Hn.getDefaultTaskList().find((n=>n.id===e));l.value=t,c.value=a.desc,u.value=a.dueDate,o=a.priority,console.log(o),U(o)})(0,t,r,0,i),e.classList.add("is-visible")},viewDetails:(n,e)=>{W=e,((n,e)=>{let t=Hn.getDefaultTaskList().find((n=>n.id===e)),r=kn(t.dueDate),o=N(t.dateCreated),i=t.priority.split("-")[1];console.log(i),h.innerText=t.title,t.desc?f.innerText=t.desc:f.innerText="no description...",g.innerText=i,En(y,t.priority,"high","medium","low"),B.innerText=r,v.innerText=o})(0,e),p.classList.add("is-visible")},openDeleteItemDialogue:n=>{I.classList.add("is-visible"),L=n}}})(),Dn="0",jn="Example Todo",qn="This is an example of a todo",zn="priority-low",Mn="2023-01-08",Yn=void 0,Wn="today",Ln=!1,Un="",Pn="Example Todo 2",On="This is the second example of a todo",Nn="priority-medium",Fn="2023-01-15",Gn=void 0,Rn="today",Xn=!1,Hn=(()=>{let n=[];return{getDefaultTaskList:()=>n,addTask:e=>{n.push(e)},removeTask:e=>{e>-1&&n.splice(e,1)}}})(),Qn=(n,e,t,r,o,i,a,A)=>{a=document.querySelector(".main-title").innerText,i=new Date,n||(n=(()=>{let n,e=Hn.getDefaultTaskList();return e.length<1?n=0:(n=Number(e.find((n=>n.id===e[e.length-1].id)).id),n++),String(n)})());let s=((n,e,t,r,o,i,a,A)=>({id:n,title:e,desc:t,priority:r,dueDate:o,dateCreated:i,project:a,completed:A}))(n,e,t,r,o,i,a,A);Hn.addTask(s),console.log(Hn.getDefaultTaskList()),In(n,e,0,r,o)};Qn(Dn,jn,qn,zn,Mn,Yn,Wn,Ln),Qn(Un,Pn,On,Nn,Fn,Gn,Rn,Xn),(()=>{const n=document.getElementById("theme-mode");n.addEventListener("change",(e=>{!0===n.checked?(document.documentElement.classList.remove("light"),document.documentElement.classList.add("dark"),window.localStorage.setItem("mode","dark")):(document.documentElement.classList.remove("dark"),document.documentElement.classList.add("light"),window.localStorage.setItem("mode","light"))}))})(),(()=>{const n=document.querySelector(".open-aside"),e=document.querySelector("nav");e.style.width="250px",n.addEventListener("click",(n=>{t(e)}));const t=n=>{"250px"===n.style.width?n.style.width="0":n.style.width="250px"}})();const Zn=document.querySelector(".todo-list"),Vn=document.getElementById("all-tasks"),Jn=document.getElementById("today-tasks"),$n=document.querySelector(".main-title"),_n=document.querySelector(".project-items"),Kn=(document.querySelectorAll(".project-item"),n=>{let e=Hn.getDefaultTaskList();for(let t of e)t.project!==n&&"All"!==n||In(t.id,t.title,t.desc,t.priority,t.dueDate,t.project,t.completed)});Vn.addEventListener("click",(n=>{for($n.innerText="All";Zn.hasChildNodes();)Zn.removeChild(Zn.firstChild);Kn("All"),console.log(Hn.getDefaultTaskList())})),Jn.addEventListener("click",(n=>{for($n.innerText="Today";Zn.hasChildNodes();)Zn.removeChild(Zn.firstChild);Kn("Today")})),_n.addEventListener("click",(n=>{if(n.target.classList.contains("project-item")){for($n.innerText=n.target.lastElementChild.innerText;Zn.hasChildNodes();)Zn.removeChild(Zn.firstChild);Kn(n.target.lastElementChild.innerText)}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,